{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get url and token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get url and token": {
      "main": [
        [
          {
            "node": "Get the shipment items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the shipment items": {
      "main": [
        [
          {
            "node": "Get the shipment from vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Update resolution create shipment item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the shipment from vpanel": {
      "main": [
        [
          {
            "node": "Get the pending resolution",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create resolution in mozart": {
      "main": [
        [
          {
            "node": "Create resolution in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create resolution in vpanel": {
      "main": [
        [
          {
            "node": "Update resolution id in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the pending resolution": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Update resolution in vpanel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create resolution in mozart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update resolution in vpanel": {
      "main": [
        [
          {
            "node": "Update resolution in mozart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update resolution create shipment item": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-08-29T09:04:00.479Z",
  "id": "348",
  "name": "Vedanta : Create resolution in mozart and vpanel",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "create-resolution",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        540,
        260
      ],
      "webhookId": "53b75851-4c8a-420b-9d92-f696a65ca6c5",
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "requestMethod": "POST",
        "url": "=https://qan8n.shakedeal.com/webhook/get-url",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "client",
              "value": "=vedanta"
            },
            {
              "name": "env",
              "value": "=qa"
            }
          ]
        }
      },
      "name": "Get url and token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        740,
        260
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_shipment_items?filter={\"sdm_shipments_id\":{\"id\":{\"_eq\":\"{{$node[\"Webhook\"].json[\"body\"][\"keys\"][0]}}\"}}}&fields=*,sdm_shipments_id.*,sdm_po_items_id.*",
        "options": {}
      },
      "name": "Get the shipment items",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        940,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let shipmentItems = $node[\"Get the shipment items\"].json[\"data\"];\nlet vendorShipment = $node[\"Get the shipment from vpanel\"].json[\"data\"];\nlet sdmResolution = {};\nlet sdvResolution = {};\nlet sdmResolutionItems = [];\nlet sdvResolutionItems = [];\nlet pendingResolution = $node[\"Get the pending resolution\"].json[\"data\"];\nlet receivedResolution = false;\nlet rejectedResoltuion = false;\nshipmentItems.forEach(function(sItem,index){\n  if(sItem.grn_status == \"grn_pending\" && sItem.received_qty < sItem.shipment_qty && !sItem.received_resolution_created){\n    receivedResolution=true;\n    let issue = sItem.grn_status == \"grn_pending\"?\"short_supply\":\"rejection\";\n    let rejected_qty = sItem.grn_status == \"grn_pending\"?sItem.shipment_qty - sItem.received_qty :sItem.rejected_qty;\n    let vendorShipmentItemId = vendorShipment[0].shipment_items.filter(vsi=>vsi.sdv_vendor_pos_sdv_products_id.po_items_id == sItem.sdm_po_items_id.id)\n    \n    if(pendingResolution.length>0){\n      sdmResolutionItems.push({\n        shipment_item : sItem.id,\n        issue : issue,\n        rejected_qty : rejected_qty,\n        grn_resolution:pendingResolution[0].mozart_resolution_id\n      });\n      sdvResolutionItems.push({\n        shipment_item : vendorShipmentItemId[0].id,\n        issue : issue,\n        rejected_qty : rejected_qty,\n        mozart_item_id:sItem.id,\n        grn_resolution:pendingResolution[0].id\n      })\n    }else{\n      sdmResolutionItems.push({\n        shipment_item : sItem.id,\n        issue : issue,\n        rejected_qty : rejected_qty\n      });\n      sdvResolutionItems.push({\n        shipment_item : vendorShipmentItemId[0].id,\n        issue : issue,\n        rejected_qty : rejected_qty,\n        mozart_item_id:sItem.id\n      })\n    }\n  }else if(!sItem.rejected_resolution_created && sItem.rejected_qty !==0){\n    rejectedResoltuion = true;\n    let issue = \"rejection\";\n    let rejected_qty = sItem.rejected_qty;\n    let vendorShipmentItemId = vendorShipment[0].shipment_items.filter(vsi=>vsi.sdv_vendor_pos_sdv_products_id.po_items_id == sItem.sdm_po_items_id.id)\n    \n    if(pendingResolution.length>0){\n      sdmResolutionItems.push({\n        shipment_item : sItem.id,\n        issue : issue,\n        rejected_qty : rejected_qty,\n        grn_resolution:pendingResolution[0].mozart_resolution_id\n      });\n      sdvResolutionItems.push({\n        shipment_item : vendorShipmentItemId[0].id,\n        issue : issue,\n        rejected_qty : rejected_qty,\n        mozart_item_id:sItem.id,\n        grn_resolution:pendingResolution[0].id\n      })\n    }else{\n      sdmResolutionItems.push({\n        shipment_item : sItem.id,\n        issue : issue,\n        rejected_qty : rejected_qty\n      });\n      sdvResolutionItems.push({\n        shipment_item : vendorShipmentItemId[0].id,\n        issue : issue,\n        rejected_qty : rejected_qty,\n        mozart_item_id:sItem.id\n      })\n    }\n  }\n  \n \n})\n\nsdmResolution.shipment = shipmentItems[0].sdm_shipments_id.id;\nsdmResolution.resolution_items = sdmResolutionItems\n\nsdvResolution.shipment= vendorShipment[0].id;\nsdvResolution.resolution_items=sdvResolutionItems\nlet updateResolutionCreatedItem = {};\n\nif(sdmResolution){\n  updateResolutionCreatedItem.keys = sdmResolution.resolution_items.map(ri=>ri.shipment_item);\n  if(receivedResolution){\n     updateResolutionCreatedItem.data ={\n       received_resolution_created:true\n    }\n  }else{\n     updateResolutionCreatedItem.data ={\n      rejected_resolution_created:true\n    }\n  }\n \n}\n\nitems[0].json.sdmResolution= sdmResolution;\nitems[0].json.sdvResolution= sdvResolution;\nitems[0].json.updateResolutionCreatedItem = updateResolutionCreatedItem;\nreturn items;"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1200,
        260
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_shipments?filter={\"_and\": [{\"invoice_number\":{\"_eq\":\"{{$node[\"Get the shipment items\"].json[\"data\"][0][\"sdm_shipments_id\"][\"invoice_number\"]}}\"}},{\"vendor_po_num\":{\"po_number\":{\"_eq\":\"{{$node[\"Get the shipment items\"].json[\"data\"][0][\"sdm_po_items_id\"][\"vendor_po\"]}}\"}}}]}&fields=*,shipment_items.*,shipment_items.sdv_vendor_pos_sdv_products_id.*",
        "options": {}
      },
      "name": "Get the shipment from vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        980,
        20
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_grn_resolutions",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function\"].json[\"sdmResolution\"]}}"
      },
      "name": "Create resolution in mozart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1600,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_grn_resolutions",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function\"].json[\"sdvResolution\"]}}"
      },
      "name": "Create resolution in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1820,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_grn_resolutions/{{$node[\"Create resolution in vpanel\"].json[\"data\"][\"id\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "mozart_resolution_id",
              "value": "={{$node[\"Create resolution in mozart\"].json[\"data\"][\"id\"]}}"
            }
          ]
        }
      },
      "name": "Update resolution id in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2040,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://sdqa.vpanel.shakedeal.com/items/sdv_grn_resolutions?filter={\"_and\":[{\"resolution_status\":{\"_eq\":\"pending\"}},{\"shipment\":{\"_eq\":\"{{$node[\"Get the shipment from vpanel\"].json.data[0].id}}\"}}]}",
        "options": {}
      },
      "name": "Get the pending resolution",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1160,
        20
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$node[\"Get the pending resolution\"].json[\"data\"].length>0?true:false}}",
              "value2": true
            }
          ]
        }
      },
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1420,
        260
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_resolution_items",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function\"].json[\"sdvResolution\"][\"resolution_items\"]}}"
      },
      "name": "Update resolution in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1680,
        0
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_resolution_items",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function\"].json[\"sdmResolution\"][\"resolution_items\"]}}"
      },
      "name": "Update resolution in mozart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1900,
        0
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_shipment_items",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function\"].json[\"updateResolutionCreatedItem\"]}}"
      },
      "name": "Update resolution create shipment item",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1380,
        40
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [],
  "updatedAt": "2023-12-26T10:21:16.798Z"
}