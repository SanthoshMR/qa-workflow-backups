{
  "active": false,
  "connections": {
    "Cron": {
      "main": [
        [
          {
            "node": "Get url and token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get url and token": {
      "main": [
        [
          {
            "node": "Get the pending IRN invoices",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the pending IRN invoices": {
      "main": [
        [
          {
            "node": "Function to get irn data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to get irn data": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Start Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Loop": {
      "main": [
        [
          {
            "node": "Function to get the splitted irn Item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to get the splitted irn Item": {
      "main": [
        [
          {
            "node": "Get the shakedeal IRN digitally signed invoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PO to mozart": {
      "main": [
        [
          {
            "node": "Update IRN in mozart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the shakedeal IRN digitally signed invoice": {
      "main": [
        [
          {
            "node": "Upload PO to mozart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update IRN in mozart": {
      "main": [
        [
          {
            "node": "Increment index",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Increment index": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "End Loop",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-09-01T05:47:54.921Z",
  "id": "353",
  "name": "Vedanta : Cron for getting the Invoice from SD to mozart",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "requestMethod": "POST",
        "url": "=https://qan8n.shakedeal.com/webhook/get-url",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "client",
              "value": "=vedanta"
            },
            {
              "name": "env",
              "value": "=qa"
            }
          ]
        }
      },
      "name": "Get url and token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        680,
        300
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX"
            }
          ]
        }
      },
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_order_invoices?filter={\"_and\": [{\"sd_irn_sent\":{\"_eq\":true}},{\"irn_file_updated\":{\"_eq\":false}}]}",
        "options": {}
      },
      "name": "Get the pending IRN invoices",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        900,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let orderInvoices = $node[\"Get the pending IRN invoices\"].json[\"data\"];\n\nconst size = 10; // size of each subarray\n\nconst result = [];\nfor (let i = 0; i < orderInvoices.length; i += size) {\n  result.push(orderInvoices.slice(i, i + size));\n}\n\n//items[0].json.result= result;\n//items[0].json.resultlength = result.length;\n//return items;\nreturn [{\n    json: {\n        result: result,\n        resultlength : result.length\n    },\n}];\n\n"
      },
      "name": "Function to get irn data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "number": [
            {
              "name": "index"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1320,
        300
      ]
    },
    {
      "parameters": {},
      "name": "Start Loop",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1520,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "let irnData = $node[\"Function to get irn data\"].json[\"result\"];\nlet currentIndex = $node[\"Start Loop\"].json[\"index\"];\nlet currentIrn = irnData[currentIndex];\nlet returnItems = [];\n\ncurrentIrn.forEach(function(obj,index){  \n    returnItems.push({\n    json: {\n       invoice_number : obj.id,\n       dms_url : $node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]\n    }\n  });\n  \n})\n\nreturn returnItems;\n\n// items[0].json.currentStock= currentStock;\n\n// return items;"
      },
      "name": "Function to get the splitted irn Item",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1700,
        300
      ]
    },
    {
      "parameters": {
        "url": "=https://sdqa.shakedeal.com/invoice_document_folder/{{$node[\"Function to get the splitted irn Item\"].json[\"invoice_number\"]+\".pdf\"}}",
        "allowUnauthorizedCerts": true,
        "responseFormat": "file",
        "options": {}
      },
      "name": "Get the shakedeal IRN digitally signed invoice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1880,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Nextcloud\"].json[\"dms_url\"]}}/items/sdm_order_invoices/{{$node[\"Function to get the splitted irn Item\"].json[\"invoice_number\"]}}?fields=*,order.*",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "view_shakedeal_invoice",
              "value": "={{$node[\"Upload PO to mozart\"].json[\"data\"][\"id\"]}}"
            },
            {
              "name": "irn_file_updated",
              "value": "={{true}}"
            }
          ]
        }
      },
      "name": "Update IRN in mozart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2260,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.mozart.shakedeal.com/files",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "bodyContentType": "multipart-form-data"
        },
        "sendBinaryData": true,
        "binaryPropertyName": "input_file:data"
      },
      "name": "Upload PO to mozart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2080,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "number": [
            {
              "name": "index",
              "value": "={{$node[\"Start Loop\"].json[\"index\"]+1}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Increment index",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2460,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"Increment index\"].json[\"index\"]}}",
              "operation": "equal",
              "value2": "={{$node[\"Function to get irn data\"].json[\"resultlength\"]}}"
            }
          ]
        }
      },
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2640,
        300
      ]
    },
    {
      "parameters": {},
      "name": "End Loop",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2880,
        200
      ]
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [],
  "updatedAt": "2023-09-01T09:37:30.052Z"
}