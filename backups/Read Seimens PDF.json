{
  "active": true,
  "connections": {
    "Read PDF": {
      "main": [
        [
          {
            "node": "Extracting the seimens po details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Po Email": {
      "main": [
        [
          {
            "node": "Read PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracting the seimens po details": {
      "main": [
        [
          {
            "node": "Post to the Seimens Pos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-05-17T09:47:27.940Z",
  "id": "310",
  "name": "Read Seimens PDF",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -100,
        380
      ]
    },
    {
      "parameters": {
        "binaryPropertyName": "attachment_0"
      },
      "name": "Read PDF",
      "type": "n8n-nodes-base.readPDF",
      "typeVersion": 1,
      "position": [
        420,
        380
      ]
    },
    {
      "parameters": {
        "format": "resolved",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "name": "Wait for Po Email",
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 1,
      "position": [
        200,
        380
      ],
      "alwaysOutputData": false,
      "credentials": {
        "imap": {
          "id": "88",
          "name": "IMAP account(tendul)"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let area = {\n  pos:{\n    id:'',\n    po_date:'',\n    po_delivery_date:'',\n    shipment_address:'',\n    po_items:[\n      {\n      id:'',\n      // tax_percentage:10,\n      hsn:'',\n      ordered_qty:'',\n      // unit_price:0,\n      net_price:'',\n      gross_price:'',\n      delivery_date:'',\n    }\n  ]\n  },\n  \n  // pan:'',\n  // gstn:'',\n  // date:'',\n  // deliverydate:'',\n  // order_no:'',\n  // org_id:'',\n  // name:'',\n  // phone:'',\n  // email:'',\n  // shipping_address:'',\n  // company:'',\n  // supplier_no:'',\n  // terms_of_payment:'',\n  // hsncode:'',\n  // itemno:'',\n  // material_description:'',\n  // grossprice:'',\n  // amount_in_words:'',\n  // integrated_gst:'',\n  // unit:'',\n  // quantity:'',  \n}\nlet testObj = {\n   test:{\n   \"id\":\"123123\",\n   \"po_date\":\n \"2023-03-30\",\n \"po_delivery_date\":\n \"2023-04-01\",\n \"shipment_address\":\n \"Siemens Ltd,Siemens Ltd,Mitesh Parmar,Mitesh Parmar,SL - Vadodara,PO Box 390013,Factory Qu/factory/factory,390013 VADODARA\",\n \"po_items\":[\n {\n \"id\":\n 9707681813,\n \"tax_percentage\":\n 10,\n \"hsn\":\n 85183000,\n \"ordered_qty\":\n 1,\n \"unit_price\":\n 0,\n \"net_price\":\n 890,\n \"gross_price\":\n 755,\n \"delivery_date\":\n \"2023-04-01\"\n }\n ]\n }\n}\nconst contentSubStringArray = items[0].json.text;\nconst lines = contentSubStringArray.split('\\n');\nconsole.log(lines);\nfor (i=0;i<lines.length;i++) {\n    if(lines[i].includes(\"PAN:\")){\n      let splitPanString = lines[i].split(\":\");\n      pan = splitPanString[1];\n      area.pan = pan;\n  }\n    else if(lines[i].includes(\"GSTN\")){\n      let splitGstnString = lines[i].split(\":\");\n      gstn = splitGstnString[1];\n      area.gstn = gstn;\n  }\n    else if(lines[i].includes(\"Date\")){\n      let splitDateString = lines[i].split(\":\");\n      date = splitDateString[1];\n      splitdate = date.split(\".\");\n      joindate = splitdate.reverse().join(\"-\");\n      area.date = joindate;\n      area.pos.po_date = area.date;\n  }\n    else if(lines[i].includes(\"Delivery date:\")){\n      let splitDeliveryDateString = lines[i].split(\":\");\n      deliverydate = splitDeliveryDateString[1].trim(\" \");\n      splitdate = deliverydate.split(\".\");\n      joindeliverydate = splitdate.reverse().join(\"-\");\n      area.deliverydate = joindeliverydate;\n      area.pos.po_delivery_date = area.deliverydate;\n      area.pos.po_items[0].delivery_date = area.deliverydate;\n  }\n   else if(lines[i].includes(\"Order no\")){\n      let splitOrderNoString = lines[i].split(\":\");\n      order_no = splitOrderNoString[0].slice(9,19);\n      area.order_no = order_no;\n     if(area.order_no){\n       area.pos.id = parseInt(area.order_no);\n     area.pos.po_items[0].id = parseInt(area.order_no);\n     }\n     else{\n       area.pos.id = '';\n       area.pos.po_items[0].id = '';       \n     }\n  }\n   else if(lines[i].includes(\"ORG-ID\")){\n      let splitOrgIdString = lines[i].split(\":\");\n      org_id = splitOrgIdString[0].slice(9,16);\n      area.org_id = org_id;\n  }\n  else if(lines[i].includes(\"Name\")){\n      let splitNameString = lines[i].split(\":\");\n      name = splitNameString[0].slice(4,37);\n      area.name = name;\n  }\n  else if(lines[i].includes(\"E-mail\")){\n      let splitEmailString = lines[i].split(\":\");\n      email = splitEmailString[1];\n      area.email = email;\n  }  \n    // Shipping Addresss\n   // *********************\n    else if(lines[i].includes(\"Shipping address\")){\n      // let splitShippingAddressString = lines[i+1].split(\":\");\n      // console.log(\"akjbdabdajbd\",lines[i])\n      // // let splitShippingAddressString = [];\n      // while(lines[i]){\n      //   console.log(\"kabiduvdiadka\",lines[i])\n      // }\n      // shipping_address = splitShippingAddressString[0];\n      // area.shipping_address = shipping_address;\n     \n      const startString = \"Shipping address\";\n      const endString = \"Please supply in accordance with the stipulated terms and conditions attached. Kindly send us your\";\n      const startIndex = lines.indexOf(startString);\n      const endIndex = lines.indexOf(endString);\n      shipping_address = lines.slice(startIndex + 1, endIndex).join();\n      console.log(\"shipping\",shipping_address)\n      area.shipping_address = shipping_address;\n      area.pos.shipment_address = area.shipping_address;\n  }\n    \n  else if(lines[i].includes(\"Company\")){\n      // let splitCompanyString = lines[i+1].split(\":\");\n      // company = splitCompanyString[0];\n      const startString = \"Company\";\n      const endString = \"PAN:    \";\n      const startIndex = lines.indexOf(startString);\n      const endIndex = lines.indexOf(endString);\n      company = lines.slice(startIndex + 1, endIndex).join();\n      area.company = company;\n  }\n  else if(lines[i].includes(\"Your supplier no.\")){\n      let splitSupplierNoString = lines[i].split(\":\");\n      const regex = /-?\\d+(\\.\\d+)?/g;\n      supplier_no = splitSupplierNoString[0].match(regex);\n      area.supplier_no = supplier_no;\n  }\n  else if(lines[i].includes(\"Terms of payment\")){\n      let splitTermsofPaymentString = lines[i+1].split(\":\");\n      terms_of_payment = splitTermsofPaymentString[0];\n      area.terms_of_payment = terms_of_payment;\n  }\n  else if(lines[i].includes(\"Telephone\")){\n      let splitTelephoneString = lines[i].split(\":\");\n      phone = splitTelephoneString[1];\n      area.phone = phone  || '9342525186';\n  }\n  else if (lines[i].includes(\"HSN/SAC Code\")){\n    let splitHsnCodeString = lines[i].split(\":\");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    hsncode =splitHsnCodeString[1].match(regex);\n    area.hsncode = hsncode;\n    if(area.hsncode){\n      area.pos.po_items[0].hsn = parseInt(area.hsncode); \n    }else{\n    area.pos.po_items[0].hsn = null; \n    }\n  }\n    \n  else if (lines[i].includes(\"Supplier Product Number\")){\n      // const startString = \"Your search\";\n      // const endString = \"Total net value\";\n      // const startIndex = lines.indexOf(startString);\n      // const endIndex = lines.indexOf(endString);\n      // material_description = lines.slice(0 + 64, 74).join();\n      // area.material_description = material_description;\n    \n    const inputString = lines;\n    const startString = \"Your search\";\n    const endString = \"Total net value\";\n    // const material_desc = getStringArrayBetween(startString, endString, inputString);\n    // function getStringArrayBetween(startString, endString, inputString) {\n      // console.log(\"start string\",startString,endString)\n      // inputString.indexOf(startString)\n    // for (let j= 0 ; j !== -1; j++){\n    // console.log(\"iiiiiiiiiiii\",j,endString)\n      // let mat_desc =inputString.indexOf(endString,i+startString.length);\n      // if(mat_desc !== -1){\n        // material_description.push(inputString.subString(i+startString.length,mat_desc));\n      // }\n    // }\n     material_description = /<p>(.*?)<\\/p>/.exec(lines)\n     if(material_description){\n    area.material_description = material_description[1];\n     }\n     else{\n       area.material_description = null;\n     }\n    }\n    \n  else if (lines[i].includes(\"In your invoice\")){\n    let splitItemNoString = lines[i+3].split(\":\");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    itemno = splitItemNoString[0].match(regex);\n    area.itemno = itemno[0];\n  }\n   else if (lines[i].includes(\"Gross Price\")){\n    let splitGrossPriceString = lines[i].split(\":\");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    grossprice = splitGrossPriceString[0].match(regex);\n    area.grossprice = grossprice[0];\n     if(area.grossprice){\n       area.pos.po_items[0].gross_price = parseInt(area.grossprice);\n     }else{\n     area.pos.po_items[0].gross_price = null;\n  }\n   }\n  else if (lines[i].includes(\"Amount in words:\")){\n    let splitAmountInWordsString = lines[i+1].split(\":\");\n    amount_in_words = splitAmountInWordsString[0];\n    area.amount_in_words = amount_in_words;\n  }\n  else if (lines[i].includes(\"acknowledgment.\")){\n    let splitUnitString = lines[i+6].split(\":\");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    unit = splitUnitString[0].slice(2,4);\n    quantity = splitUnitString[0].match(regex);\n    area.unit = unit;\n    if(area.unit){\n      area.pos.po_items.unit_price = area.unit;\n    }else{\n    area.pos.po_items.unit_price = null;\n    }\n    area.quantity =  quantity;\n    if(area.quantity){\n       area.pos.po_items[0].ordered_qty = parseInt(area.quantity);\n    }else{\n    area.pos.po_items[0].ordered_qty = null;\n  }\n      }\n  else if (lines[i].includes(\"Integrated GST\")){\n    let splitIntegratedGSTString = lines[i].split(\" \");\n    integrated_gst = splitIntegratedGSTString[0];\n    area.pos.po_items.integrated_gst = integrated_gst;\n  }\n  else if (lines[i].includes(\"Total net value\")){\n    if(lines[i].includes(\"Total net value incl. Tax INR \"))\n      {\n    let splitTotalPONetValueString = lines[i].split(\" \");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    net_price = splitTotalPONetValueString[18].match(regex);\n        if(net_price){\n          area.pos.po_items[0].net_price = parseInt(net_price);\n         }else{\n          area.pos.po_items[0].net_price = null;\n         }\n    }\n    else{\n    let splitTotalPOGrossValueString = lines[i].split(\" \");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    gross_price = splitTotalPOGrossValueString[2].match(regex);\n      if(gross_price){\n        area.pos.po_items[0].gross_price = parseInt(gross_price);\n      }else{\n    area.pos.po_items[0].gross_price = null;\n    }\n    }\n  }\n}\nreturn area;\n"
      },
      "name": "Extracting the seimens po details",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        660,
        380
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://noirqa.shakedeal.com/items/sds_pos",
        "allowUnauthorizedCerts": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "id",
              "value": "={{$node[\"Extracting the seimens po details\"].json[\"order_no\"]}}"
            },
            {
              "name": "po_delivery_date",
              "value": "={{$json[\"deliverydate\"]}}"
            },
            {
              "name": "po_date",
              "value": "={{$json[\"date\"]}}"
            },
            {
              "name": "shipment_address",
              "value": "={{$json[\"shipping_address\"]}}"
            },
            {
              "name": "po_items",
              "value": "={{$json[\"pos\"][\"po_items\"]}}"
            }
          ]
        }
      },
      "name": "Post to the Seimens Pos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        880,
        380
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Header Auth account 2"
        }
      }
    }
  ],
  "settings": {},
  "staticData": {
    "node:Wait for Po Email": {
      "lastMessageUid": 2154
    }
  },
  "tags": [],
  "updatedAt": "2023-05-19T14:35:48.429Z"
}