{
  "active": true,
  "connections": {
    "Read PDF": {
      "main": [
        [
          {
            "node": "Extracting the seimens po details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Po Email": {
      "main": [
        [
          {
            "node": "Read PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracting the seimens po details": {
      "main": [
        [
          {
            "node": "Post to the Seimens Pos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-05-17T09:47:27.940Z",
  "id": "310",
  "name": "Read Seimens PDF",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -100,
        380
      ]
    },
    {
      "parameters": {
        "binaryPropertyName": "attachment_0"
      },
      "name": "Read PDF",
      "type": "n8n-nodes-base.readPDF",
      "typeVersion": 1,
      "position": [
        420,
        380
      ]
    },
    {
      "parameters": {
        "format": "resolved",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "name": "Wait for Po Email",
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 1,
      "position": [
        200,
        380
      ],
      "alwaysOutputData": false,
      "credentials": {
        "imap": {
          "id": "88",
          "name": "IMAP account(tendul)"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let area = {\n  pos:{\n    id:'',\n    po_value:'',\n    po_date:'',\n    po_delivery_date:'',\n    shipment_address:'',\n    gstin:'',\n    city:'',\n    country:'',\n    pincode:'',\n    poc_name:'',\n    poc_contact_number:'',\n    poc_email:'',\n    po_items:[\n      {\n      id:'',\n      hsn:'',\n      sku_code:'',\n      ordered_qty:'',\n      unit_price:'',\n      net_price:'',\n      gross_price:'',\n      delivery_date:'',\n      tax_percentage:'',\n      tax_value:'',\n    }\n  ]\n  },\n}\nconst contentSubStringArray = items[0].json.text;\nconst lines = contentSubStringArray.split('\\n');\nconsole.log(lines);\nfor (i=0;i<lines.length;i++) {\n    if(lines[i].includes(\"PAN:\")){\n      let splitPanString = lines[i].split(\":\");\n      pan = splitPanString[1];\n      area.pan = pan;\n  }\n    else if(lines[i].includes(\"GSTN\")){\n      let splitGstnString = lines[i].split(\" \");\n      gstin = splitGstnString[1];\n      console.log(gstin)\n      if (gstin) {\n        area.pos.gstin = gstin;\n      }else{\n      area.pos.gstin = null;\n      }\n  }\n    else if(lines[i].includes(\"Date\")){\n      let splitDateString = lines[i].split(\":\");\n      date = splitDateString[1];\n      splitdate = date.split(\".\");\n      joindate = splitdate.reverse().join(\"-\");\n      area.date = joindate;\n      area.pos.po_date = area.date;\n  }\n    else if(lines[i].includes(\"Delivery date:\")){\n      let splitDeliveryDateString = lines[i].split(\":\");\n      deliverydate = splitDeliveryDateString[1].trim(\" \");\n      splitdate = deliverydate.split(\".\");\n      joindeliverydate = splitdate.reverse().join(\"-\");\n      area.deliverydate = joindeliverydate;\n      area.pos.po_delivery_date = area.deliverydate;\n      area.pos.po_items[0].delivery_date = area.deliverydate;\n  }\n   else if(lines[i].includes(\"Order no\")){\n      let splitOrderNoString = lines[i].split(\":\");\n     const regex = /-?\\d+(\\.\\d+)?/g;\n      order_no = splitOrderNoString[0].match(regex);\n      area.order_no = parseInt(order_no);\n   \n        if(area.order_no){\n       area.pos.id = parseInt(area.order_no);\n     area.pos.po_items[0].id = parseInt(area.order_no) + '-' + parseInt(area.itemno);\n     }\n     else{\n       area.pos.id = '' ;\n       area.pos.po_items[0].id = '';       \n     }\n    \n  }\n   else if(lines[i].includes(\"ORG-ID\")){\n      let splitOrgIdString = lines[i].split(\":\");\n      org_id = splitOrgIdString[0].slice(9,16);\n      area.org_id = org_id;\n  }\n  else if(lines[i].includes(\"Name\")){\n      let splitNameString = lines[i].split(\":\");\n      name = splitNameString[0].slice(4,37);\n      area.pos.poc_name = name;\n  }\n  else if(lines[i].includes(\"E-mail\")){\n      let splitEmailString = lines[i].split(\":\");\n      email = splitEmailString[1];\n      area.pos.poc_email = email;\n  }  \n    // Shipping Addresss\n   // *********************\n    else if(lines[i].includes(\"Shipping address\")){\n      const startString = \"Shipping address\";\n      const endString = \"Please supply in accordance with the stipulated terms and conditions attached. Kindly send us your\";\n      const startIndex = lines.indexOf(startString);\n      const endIndex = lines.indexOf(endString);\n      shipping_address = lines.slice(startIndex + 1, endIndex).join();\n      console.log(\"shipping\",shipping_address)\n      area.shipping_address = shipping_address;\n      area.pos.shipment_address = area.shipping_address;\n      if(area.pos.shipment_address){\n        const regex = /-?\\d+(\\.\\d+)?/g;\n        billing_address = area.pos.shipment_address.split(\" \").reverse(\"\");\n         splitBillingaddress = billing_address;\n         city = splitBillingaddress[0].split(\",\");\n         area.pos.city = city[0];\n         country = splitBillingaddress[0].split(\",\");\n        area.pos.country = country[1];\n        console.log(\"pincode\",splitBillingaddress)\n        pincode = splitBillingaddress[1].match(regex);\n        console.log(\"pincode\",pincode)\n        area.pos.pincode = parseInt(pincode);\n        \n      }\n  }\n  else if (lines[i].includes(\"In your invoice\")){\n      let splitItemNoString = lines[i+3].split(\":\");\n      const regex = /-?\\d+(\\.\\d+)?/g;\n      itemno = splitItemNoString[0].match(regex);\n       area.itemno = itemno[0];\n  }\n  else if(lines[i].includes(\"Company\")){\n      const startString = \"Company\";\n      const endString = \"PAN:    \";\n      const startIndex = lines.indexOf(startString);\n      const endIndex = lines.indexOf(endString);\n      company = lines.slice(startIndex + 1, endIndex).join();\n      area.company = company;\n  }\n  else if(lines[i].includes(\"Your supplier no.\")){\n      let splitSupplierNoString = lines[i].split(\":\");\n      const regex = /-?\\d+(\\.\\d+)?/g;\n      supplier_no = splitSupplierNoString[0].match(regex);\n      area.supplier_no = supplier_no;\n  }\n  else if(lines[i].includes(\"Terms of payment\")){\n      let splitTermsofPaymentString = lines[i+1].split(\":\");\n      terms_of_payment = splitTermsofPaymentString[0];\n      area.terms_of_payment = terms_of_payment;\n  }\n  else if(lines[i].includes(\"Telephone\")){\n      let splitTelephoneString = lines[i];\n      phone = splitTelephoneString[1];\n      area.pos.poc_contact_number = parseInt(phone)  || '9342525186';\n  }\n  else if (lines[i].includes(\"HSN/SAC Code\")){\n    let splitHsnCodeString = lines[i].split(\":\");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    hsncode =splitHsnCodeString[1].match(regex);\n    area.hsncode = hsncode;\n    if(area.hsncode){\n      area.pos.po_items[0].hsn = parseInt(area.hsncode); \n    }else{\n    area.pos.po_items[0].hsn = ''; \n    }\n  }\n  else if (lines[i].includes(\"Supplier Product Number\")){\n    const inputString = lines;\n    const startString = \"Your search\";\n    const endString = \"Total net value\";\n     material_description = /<p>(.*?)<\\/p>/.exec(lines)\n    if(material_description){\n    area.material_description = material_description[1];\n    }\n    else{\n      area.material_description = null;\n    }\n    console.log(\"material_description\",area.material_description)\n  }\n   else if (lines[i].includes(\"Gross Price\")){\n    let splitGrossPriceString = lines[i].split(\":\");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    grossprice = splitGrossPriceString[0].match(regex);\n    area.grossprice = grossprice[0];\n     if(area.grossprice){\n       area.pos.po_items[0].gross_price = parseInt(area.grossprice);\n     }else{\n     area.pos.po_items[0].gross_price = '';\n  }\n   }\n  else if (lines[i].includes(\"Amount in words:\")){\n    let splitAmountInWordsString = lines[i+1].split(\":\");\n    amount_in_words = splitAmountInWordsString[0];\n    area.amount_in_words = amount_in_words;\n  }\n  else if (lines[i].includes(\"acknowledgment.\")){\n    let splitUnitString = lines[i+6].split(\":\");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n    unit = splitUnitString[0].slice(2,4);\n    quantity = splitUnitString[0].match(regex);\n    area.unit = unit;\n    if(area.unit){\n      area.pos.po_items.unit_price = area.unit;\n    }else{\n    area.pos.po_items.unit_price = '';\n    }\n    area.quantity =  quantity;\n    if(area.quantity){\n       area.pos.po_items[0].ordered_qty = parseInt(area.quantity);\n    }else{\n    area.pos.po_items[0].ordered_qty = '';\n  }\n      }\n  else if (lines[i].includes(\"Integrated GST\")){\n    let splitIntegratedGSTString = lines[i].split(\" \");\n    integrated_gst = splitIntegratedGSTString[0];\n    area.pos.po_items.integrated_gst = integrated_gst;\n  }\n  else if (lines[i].includes(\"Note regarding Invoice\")){\n    let splitSkuCodeString = lines[i-1].split(\" \");\n    console.log(\"ddda\",splitSkuCodeString)\n    sku_code = splitSkuCodeString[0];\n    console.log(\"sku\",sku_code)\n    if(sku_code){\n      area.pos.po_items[0].sku_code = sku_code;\n    }else{\n    area.pos.po_items[0].sku_code = null;\n    }\n  }\n  else if (lines[i].includes(\"Total net value\")){\n    if(lines[i].includes(\"Total net value incl. Tax INR \"))\n      {\n    let splitTotalPONetValueString = lines[i].split(\" \");\n     const regex = /[\\d,]+(?:\\.\\d+)?/;\n        for (let element of splitTotalPONetValueString) {\n          console.log(\"kjndad\",splitTotalPONetValueString)\n        const matches = element.match(regex);\n        if (matches) {\n          const gross_price = matches[0].replace(\",\",'');\n          if(gross_price){\n          area.pos.po_items[0].gross_price = parseFloat(gross_price);\n          area.pos.po_value = parseFloat(gross_price);\n         }else{\n          area.pos.po_items[0].gross_price = null;\n         }\n          break;\n        }\n      }\n    }\n    else{\n    let splitTotalPOGrossValueString = lines[i].split(\" \");\n    const regex = /-?\\d+(\\.\\d+)?/g;\n      console.log(\"net_price\",splitTotalPOGrossValueString)\n    net_price = splitTotalPOGrossValueString[2].replace(\",\",'');\n      console.log(\"netnet\",net_price)\n      net_price = net_price.match(regex);\n      if(net_price){\n        area.pos.po_items[0].net_price = parseFloat(net_price);\n        area.pos.po_items[0].unit_price = parseFloat(net_price);\n      }else{\n    area.pos.po_items[0].net_price = '';\n    }\n    }\n    \n// Tax value calculation\n    area.pos.po_items[0].tax_value = area.pos.po_items[0].gross_price - area.pos.po_items[0].net_price;\n    \n// Tax percentage calculation\n    area.pos.po_items[0].tax_percentage = (area.pos.po_items[0].tax_value / area.pos.po_items[0].net_price) * 100;\n  }\n}\nreturn area;\n"
      },
      "name": "Extracting the seimens po details",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        660,
        380
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://noirqa.shakedeal.com/items/sds_pos",
        "allowUnauthorizedCerts": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "id",
              "value": "={{$node[\"Extracting the seimens po details\"].json[\"order_no\"]}}"
            },
            {
              "name": "po_delivery_date",
              "value": "={{$json[\"deliverydate\"]}}"
            },
            {
              "name": "po_date",
              "value": "={{$json[\"date\"]}}"
            },
            {
              "name": "shipment_address",
              "value": "={{$json[\"shipping_address\"]}}"
            },
            {
              "name": "po_items",
              "value": "={{$json[\"pos\"][\"po_items\"]}}"
            }
          ]
        }
      },
      "name": "Post to the Seimens Pos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        880,
        380
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Header Auth account 2"
        }
      }
    }
  ],
  "settings": {},
  "staticData": {
    "node:Wait for Po Email": {
      "lastMessageUid": 2162
    }
  },
  "tags": [],
  "updatedAt": "2023-05-21T13:24:44.587Z"
}