{
  "active": true,
  "connections": {
    "Get vendor_payment_status": {
      "main": [
        [
          {
            "node": "Get url and token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get url and token": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get vendor payment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get vendor payment": {
      "main": [
        [
          {
            "node": "Get the po id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the po id": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Update residual amount",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get the payment to vendor data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the shipment id": {
      "main": [
        [
          {
            "node": "Create vendor payment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update residual amount": {
      "main": [
        [
          {
            "node": "Create vendor payment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create vendor payment in mozart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp": {
      "main": [
        [
          {
            "node": "Get the shipment id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create vendor payment in mozart": {
      "main": [
        [
          {
            "node": "Get the shipment id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Update vendor payments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update vendor payments": {
      "main": [
        [
          {
            "node": "Update consumed amount in shipmentPayment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create vendor payment": {
      "main": [
        [
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update shipment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the payment to vendor data": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update shipment": {
      "main": [
        [
          {
            "node": "Tag payment to shipment in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tag payment to shipment in vpanel": {
      "main": [
        [
          {
            "node": "Tag shipment to payment in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update consumed amount in shipmentPayment": {
      "main": [
        [
          {
            "node": "Update total consumed in vendor payment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update total consumed in vendor payment": {
      "main": [
        [
          {
            "node": "Update CA in shipment payment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update CA in shipment payment": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-10-19T10:00:21.945Z",
  "id": "217",
  "name": "Vedanta : Create vendor payment in vendor panel",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        40,
        20
      ]
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "create_vendor_payment",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "Get vendor_payment_status",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -560,
        380
      ],
      "webhookId": "e85462e8-7fc0-454e-8dc6-7769368d12a7",
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "requestMethod": "POST",
        "url": "=https://qan8n.shakedeal.com/webhook/get-url",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "client",
              "value": "={{$node[\"Get vendor_payment_status\"].json[\"headers\"][\"client\"]}}"
            },
            {
              "name": "env",
              "value": "={{$node[\"Get vendor_payment_status\"].json[\"headers\"][\"x-sd-env\"]}}"
            }
          ]
        }
      },
      "name": "Get url and token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -340,
        380
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "vpanel_dms_url",
              "value": "={{$node[\"Get url and token\"].json[\"0\"][\"vendor_panel_url\"]}}"
            },
            {
              "name": "mozart_dms_url",
              "value": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}"
            },
            {
              "name": "send_from_email",
              "value": "=handyalasairam9177@gmail.com"
            },
            {
              "name": "accounts_email",
              "value": "=sairam.reddy@shakedeal.com"
            }
          ]
        },
        "options": {}
      },
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -120,
        380
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_payments/{{$node[\"Get vendor_payment_status\"].json[\"body\"][\"keys\"][0]}}?fields=id,payment_amount,payment_date,tax_deducted,any_deductions,vendor_payment_status,vendor_po_number,payment_type,residual_amount,actual_paid_amount,payment_paid_to_vendor,payment_utr,payment_description,consumed_amount,shipments.*",
        "options": {}
      },
      "name": "Get vendor payment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        120,
        380
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_type\"]}}",
              "value2": "advance"
            }
          ]
        }
      },
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        740,
        400
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_vendor_pos?filter={\"po_number\":{\"_eq\":\"{{$node[\"Get vendor payment\"].json[\"data\"][\"vendor_po_number\"]}}\"}}",
        "options": {}
      },
      "name": "Get the po id",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        380,
        380
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_vendor_payments",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "vendor_po_number",
              "value": "={{$node[\"Get the po id\"].json[\"data\"][0][\"id\"]}}"
            },
            {
              "name": "payment_utr",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_utr\"]}}"
            },
            {
              "name": "payment_amount",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_amount\"]}}"
            },
            {
              "name": "payment_description",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_description\"]}}"
            },
            {
              "name": "vendor_payment_status",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"vendor_payment_status\"]}}"
            },
            {
              "name": "payment_type",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_type\"]}}"
            },
            {
              "name": "actual_amount_received",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"actual_paid_amount\"]}}"
            },
            {
              "name": "payment_date",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_date\"]}}"
            },
            {
              "name": "tax_deducted",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"tax_deducted\"]}}"
            },
            {
              "name": "any_deductions",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"any_deductions\"]}}"
            },
            {
              "name": "payment_ref",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"id\"]}}"
            }
          ]
        }
      },
      "name": "Create vendor payment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2860,
        440
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_shipments?filter={\"invoice_number\":{\"_eq\":\"{{$node[\"Get the payment to vendor data\"].json[\"data\"][0][\"sdm_vendor_invoice_details_id\"][\"shipment\"][\"invoice_number\"]}}\"}}",
        "options": {}
      },
      "name": "Get the shipment id",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2520,
        580
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_payments/{{$node[\"Get vendor_payment_status\"].json[\"body\"][\"keys\"][0]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "residual_amount",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][0][\"sdm_vendor_payments_id\"][\"actual_paid_amount\"]}}"
            }
          ]
        }
      },
      "name": "Update residual amount",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1520,
        160
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": true,
              "value2": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_paid_to_vendor\"] == \"fully_paid\"?true:false}}"
            },
            {
              "value1": true,
              "value2": "={{$node[\"Update vendor payments\"].json[\"data\"][\"remaining_to_pay\"]<=0?true:false}}"
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2000,
        600
      ]
    },
    {
      "parameters": {},
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2280,
        440
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_payments",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "vendor_po_number",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"vendor_po_number\"]}}"
            },
            {
              "name": "vendor_invoice",
              "value": "={{$node[\"Get vendor payment\"].json[\"data\"][\"vendor_invoice\"][\"id\"]}}"
            },
            {
              "name": "payment_amount",
              "value": "={{$node[\"Update vendor payments\"].json[\"data\"][\"remaining_to_pay\"]}}"
            },
            {
              "name": "payment_type",
              "value": "=invoice"
            },
            {
              "name": "actual_paid_amount",
              "value": "={{$node[\"Update vendor payments\"].json[\"data\"][\"remaining_to_pay\"]}}"
            }
          ]
        }
      },
      "name": "Create vendor payment in mozart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2260,
        760
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "functionCode": "let vendorPayments = $node[\"Get the payment to vendor data\"].json[\"data\"][0][\"sdm_vendor_invoice_details_id\"][\"vendor_payments\"];\nlet payableAmount = $node[\"Get the payment to vendor data\"].json[\"data\"][0][\"sdm_vendor_invoice_details_id\"].payable_amount\nlet paymentShipments = $node[\"Get vendor payment\"].json[\"data\"][\"shipments\"];\nlet paidVendorPayments = vendorPayments.filter(payment=>payment.sdm_vendor_payments_id.vendor_payment_status )\nlet updateItem = {};\nlet taxDeducted = 0;\nlet anyDeductions = 0;\nconst sumOfPayment = paidVendorPayments.reduce(\n  (accumulator, payment) => accumulator + parseFloat(payment.sdm_vendor_payments_id.payment_type == \"advance\"?payment.consumed_amount:payment.sdm_vendor_payments_id.actual_paid_amount),\n  0\n);\n\npaidVendorPayments.forEach(function(payment,index){\n  taxDeducted=taxDeducted+parseFloat(payment.sdm_vendor_payments_id.tax_deducted);\n  anyDeductions= anyDeductions+parseFloat(payment.sdm_vendor_payments_id.any_deductions);\n})\n\nlet consumedAmount = 0;\nlet matchedShipmentPayment = vendorPayments.filter(vp=>vp.sdm_vendor_payments_id.id == $node[\"Get vendor_payment_status\"].json[\"body\"][\"keys\"][0]);\nlet matchedPaymentShipment = paymentShipments.filter(ps=>ps.sdm_vendor_payments_id == $node[\"Get vendor_payment_status\"].json[\"body\"][\"keys\"][0]);\nlet shipmentPaymentId = matchedShipmentPayment[0].id;\nlet paymentShipmentId = matchedPaymentShipment[0].id;\nif(parseFloat(matchedShipmentPayment[0].sdm_vendor_payments_id.actual_paid_amount) == 0){\n  consumedAmount = parseFloat(matchedShipmentPayment[0].sdm_vendor_payments_id.tax_deducted) + parseFloat(matchedShipmentPayment[0].sdm_vendor_payments_id.any_deductions);\n}else {\n  consumedAmount = parseFloat(matchedShipmentPayment[0].sdm_vendor_payments_id.actual_paid_amount);\n}\n\nlet totalPaidAmount = sumOfPayment;\nlet remainingToPay = parseFloat(payableAmount) - totalPaidAmount-taxDeducted-anyDeductions;\nlet totalPercentagePaid = (totalPaidAmount/payableAmount)*100;\nlet vendor_payment = \"paymentpending\"\nif(totalPercentagePaid >= 100 || remainingToPay <= 5){\n  vendor_payment = \"paymentreleased\"\n}else if(totalPercentagePaid<100 && totalPercentagePaid > 0){\n  vendor_payment = \"partiallypaid\"\n}\n\nupdateItem.total_paid_amount = totalPaidAmount;\nupdateItem.remaining_to_pay = remainingToPay;\nupdateItem.total_percentage_paid = totalPercentagePaid;\n\nupdateItem.vendor_payment = vendor_payment\n\nitems[0].json.paidVendorPayments= paidVendorPayments;\nitems[0].json.sumOfPayment= sumOfPayment;\nitems[0].json.updateItem= updateItem;\nitems[0].json.matchedShipmentPayment = matchedShipmentPayment;\nitems[0].json.shipmentPaymentId = shipmentPaymentId;\nitems[0].json.paymentShipmentId = paymentShipmentId;\nitems[0].json.consumedAmount = consumedAmount;\n\nreturn items;"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1040,
        620
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_invoice_details/{{$node[\"Get the payment to vendor data\"].json[\"data\"][0][\"sdm_vendor_invoice_details_id\"][\"id\"]}}",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function\"].json[\"updateItem\"]}}"
      },
      "name": "Update vendor payments",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1220,
        600
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Get vendor payment\"].json[\"data\"][\"payment_type\"]}}",
              "value2": "=advance"
            }
          ]
        }
      },
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3100,
        440
      ]
    },
    {
      "parameters": {},
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3400,
        40
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_shipments/{{$node[\"Get the shipment id\"].json[\"data\"][0][\"id\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "total_amount_received",
              "value": "={{parseFloat($node[\"Get the shipment id\"].json[\"data\"][0][\"total_amount_received\"])+parseFloat($node[\"Get vendor payment\"].json[\"data\"][\"actual_paid_amount\"])}}"
            },
            {
              "name": "total_tax_deducted",
              "value": "={{parseFloat($node[\"Get the shipment id\"].json[\"data\"][0][\"total_tax_deducted\"])+parseFloat($node[\"Get vendor payment\"].json[\"data\"][\"tax_deducted\"])}}"
            },
            {
              "name": "total_other_deductions",
              "value": "={{parseFloat($node[\"Get the shipment id\"].json[\"data\"][0][\"total_other_deductions\"])+parseFloat($node[\"Get vendor payment\"].json[\"data\"][\"any_deductions\"])}}"
            },
            {
              "name": "total_outstanding",
              "value": "={{$node[\"Function\"].json[\"updateItem\"][\"remaining_to_pay\"]}}"
            }
          ]
        }
      },
      "name": "Update shipment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3440,
        540
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_invoice_details_sdm_vendor_payments?filter={\"sdm_vendor_payments_id\":{\"_eq\":\"{{$node[\"Get vendor_payment_status\"].json[\"body\"][\"keys\"][0]}}\"}}&fields=sdm_vendor_invoice_details_id.*,sdm_vendor_invoice_details_id.shipment.*,sdm_vendor_invoice_details_id.vendor_payments.sdm_vendor_payments_id.*,sdm_vendor_invoice_details_id.vendor_payments.consumed_amount,id",
        "options": {}
      },
      "name": "Get the payment to vendor data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        840,
        620
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_vendor_payments_sdv_shipments",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "sdv_shipments_id",
              "value": "={{$node[\"Get the shipment id\"].json[\"data\"][0][\"id\"]}}"
            },
            {
              "name": "sdv_vendor_payments_id",
              "value": "={{$node[\"Create vendor payment\"].json[\"data\"][\"id\"]}}"
            },
            {
              "name": "consumed_amount",
              "value": "={{$node[\"Create vendor payment\"].json[\"data\"][\"actual_amount_received\"]}}"
            }
          ]
        }
      },
      "name": "Tag payment to shipment in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3680,
        560
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"vendor_panel_url\"]}}/items/sdv_shipments_sdv_vendor_payments",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "sdv_shipments_id",
              "value": "={{$node[\"Get the shipment id\"].json[\"data\"][0][\"id\"]}}"
            },
            {
              "name": "sdv_vendor_payments_id",
              "value": "={{$node[\"Create vendor payment\"].json[\"data\"][\"id\"]}}"
            },
            {
              "name": "consumed_amount",
              "value": "={{$node[\"Create vendor payment\"].json[\"data\"][\"actual_amount_received\"]}}"
            }
          ]
        }
      },
      "name": "Tag shipment to payment in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3920,
        560
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "51",
          "name": "VendorPanel DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_invoice_details_sdm_vendor_payments/{{$node[\"Function\"].json[\"shipmentPaymentId\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "consumed_amount",
              "value": "={{$node[\"Function\"].json[\"consumedAmount\"]}}"
            }
          ]
        }
      },
      "name": "Update consumed amount in shipmentPayment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1400,
        600
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_payments/{{$node[\"Get vendor_payment_status\"].json[\"body\"][\"keys\"][0]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "consumed_amount",
              "value": "={{$node[\"Function\"].json[\"consumedAmount\"]}}"
            }
          ]
        }
      },
      "name": "Update total consumed in vendor payment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1580,
        600
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Globals\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_payments_sdm_vendor_invoice_details/{{$node[\"Function\"].json[\"paymentShipmentId\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "consumed_amount",
              "value": "={{$node[\"Function\"].json[\"consumedAmount\"]}}"
            }
          ]
        }
      },
      "name": "Update CA in shipment payment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1800,
        600
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [],
  "updatedAt": "2023-08-08T12:36:52.623Z"
}