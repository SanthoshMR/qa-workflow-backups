{
  "active": false,
  "connections": {
    "Read PDF": {
      "main": [
        [
          {
            "node": "Post the file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post the file": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the products": {
      "main": [
        [
          {
            "node": "Get the po Item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create products": {
      "main": [
        [
          {
            "node": "Construct HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Create products",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp": {
      "main": [
        [
          {
            "node": "Function to construct PO obj",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the po Item": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to construct PO obj": {
      "main": [
        [
          {
            "node": "Post to the Seimens Pos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Details on Pincode": {
      "main": [
        [
          {
            "node": "Get the products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check sku exists": {
      "main": [
        [
          {
            "node": "Get Details on Pincode",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create routing pos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create routing pos": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Construct HTML": {
      "main": [
        [
          {
            "node": "Adhoc Product Created Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check PO Exist": {
      "main": [
        [
          {
            "node": "Send PO Exist Mail",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create PO error record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get PO by PO Number": {
      "main": [
        [
          {
            "node": "Check PO Exist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adhoc Product Created Mail": {
      "main": [
        [
          {
            "node": "Function to construct PO obj",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Get PO by PO Number",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the PO number and subject": {
      "main": [
        [
          {
            "node": "Read PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PO Details & Items": {
      "main": [
        [
          {
            "node": "Extracting po details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for Po Email": {
      "main": [
        [
          {
            "node": "Get the PO number and subject",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracting po details": {
      "main": [
        [
          {
            "node": "Check sku exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create PO error record": {
      "main": [
        [
          {
            "node": "Extract PO Details & Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post to the Seimens Pos": {
      "main": [
        [
          {
            "node": "Make PO created true",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-09-14T09:19:54.566Z",
  "id": "357",
  "name": "Adani : Read PDF",
  "nodes": [
    {
      "parameters": {
        "binaryPropertyName": "=attachment_{{$node[\"Get the PO number and subject\"].json[\"attachmentIndex\"]}}"
      },
      "name": "Read PDF",
      "type": "n8n-nodes-base.readPDF",
      "typeVersion": 1,
      "position": [
        520,
        380
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_pos",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersJson": "={{$node[\"Function to construct PO obj\"].json[\"poObj\"]}}"
      },
      "name": "Post to the Seimens Pos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1900,
        960
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/files",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "bodyContentType": "multipart-form-data"
        },
        "sendBinaryData": true,
        "binaryPropertyName": "=input_file:attachment_{{$node[\"Get the PO number and subject\"].json[\"attachmentIndex\"]}}"
      },
      "name": "Post the file",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        680,
        380
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_products?filter={\"id\":{\"_in\":\"{{$node[\"Extracting po details\"].json[\"productIds\"]}}\"}}",
        "options": {}
      },
      "name": "Get the products",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        660,
        860
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let poProducts = $node[\"Extracting po details\"].json[\"products\"];\nlet existingProductData = $node[\"Get the products\"].json[\"data\"];\nlet poObj = $node[\"Extracting po details\"].json[\"area\"][\"pos\"];\nlet poItems =  $node[\"Get the po Item\"].json[\"data\"];\nlet resultFilter = \n   poProducts.filter(products=>\n     !existingProductData.some(\n      data=> data.id === products.id \n    )\n  );\nlet productsToCreate = resultFilter;\nuniqueArr = Object.create(null),\n    uniqueProductArr = productsToCreate.filter(o => {\n        var key = ['id'].map(k => o[k]).join('|');\n        if (!uniqueArr[key]) {\n            uniqueArr[key] = true;\n            return true;\n        }\n    });\n\nitems[0].json.resultFilter = resultFilter;\nitems[0].json.productsToCreate = uniqueProductArr;\nreturn items;"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1040,
        860
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_products",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function\"].json[\"productsToCreate\"]}}"
      },
      "name": "Create products",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1440,
        740
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": true,
              "value2": "={{$node[\"Function\"].json[\"productsToCreate\"].length>0?true:false}}"
            }
          ]
        }
      },
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1240,
        860
      ]
    },
    {
      "parameters": {},
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1480,
        1140
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_po_items?filter={\"_and\": [{\"product\": {\"_in\":\"{{$node[\"Extracting po details\"].json[\"productIds\"]}}\"}},{\"vendor\":{\"_neq\":null}}]}&sort=-date_created&limit=1&fields=product,vendor.id,vendor.shipment_type",
        "options": {}
      },
      "name": "Get the po Item",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        860,
        860
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let poProducts = $node[\"Extracting po details\"].json[\"products\"];\nlet postOfficeDetails = $node[\"Get Details on Pincode\"].json[0][\"PostOffice\"];\nif(postOfficeDetails && postOfficeDetails.length > 0){\n  postOfficeDetails = $node[\"Get Details on Pincode\"].json[0][\"PostOffice\"][0];\n}else{\n  postOfficeDetails = null;\n}\nlet city = postOfficeDetails && postOfficeDetails[\"District\"] !== null ? postOfficeDetails[\"District\"] : null;\nlet state = postOfficeDetails && postOfficeDetails[\"State\"] !== null ? postOfficeDetails[\"State\"] : null;\nlet country = postOfficeDetails && postOfficeDetails[\"Country\"] !== null ? postOfficeDetails[\"Country\"] : null;\n$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"city\"]= city;\n$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"state\"]= state;\n$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"country\"]= country;\n$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"ship_city\"]= city;\n$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"ship_state\"]= state;\n$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"ship_country\"]= country;\nlet poObj = $node[\"Extracting po details\"].json[\"area\"][\"pos\"];\nlet poItems =  $node[\"Get the po Item\"].json[\"data\"];\nlet existingProducts = $node[\"Get the products\"].json[\"data\"];\nlet createdProducts =$node[\"Function\"].json[\"productsToCreate\"].length>0?$node[\"Create products\"].json[\"data\"]:[];\nlet allProducts = [...existingProducts,...createdProducts]\npoProducts.forEach(function(poProduct,index){\n  let matchedPoItem = poItems.filter(poItem=>poItem.product == poProduct.id);\n  let matchedProduct = allProducts.filter(product=>product.id == poProduct.id);\n  poObj.po_items[index].category = matchedProduct[0].main_category;\n  if(matchedPoItem.length>0){\n    poObj.po_items[index].vendor = matchedPoItem[0].vendor.id;\n    poObj.po_items[index].shipment_type = matchedPoItem[0].vendor.shipment_type;\n  }\n})\nitems[0].json.poObj= poObj\nreturn items;"
      },
      "name": "Function to construct PO obj",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1680,
        960
      ]
    },
    {
      "parameters": {
        "url": "=https://api.postalpincode.in/pincode/{{$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"pincode\"]}}",
        "jsonParameters": true,
        "options": {}
      },
      "name": "Get Details on Pincode",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        440,
        860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": true,
              "value2": "={{true}}"
            }
          ]
        }
      },
      "name": "Check sku exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        200,
        880
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_routing_pos",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "po_number",
              "value": "={{$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"id\"]}}"
            }
          ]
        }
      },
      "name": "Create routing pos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        440,
        1100
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "noreply@shakedeal.com",
        "toEmail": "=chidanand@shakedeal.com,surya.kc@shakedeal.com,parthiban.n@shakedeal.com,vinay.kumar@shakedeal.com,aditya.darira@shakedeal.com,vinod.raj@shakedeal.com",
        "subject": "=Not able to read PO - {{$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"id\"]}}",
        "text": "=Hi Team,\n\nWe are not able to read PO as SKU is not present\n\nThanks",
        "options": {}
      },
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        700,
        1100
      ],
      "credentials": {
        "smtp": {
          "id": "7",
          "name": "AWS SES Creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let result=$node[\"Create products\"].json.data;\n\nlet table = '<table>';\n   table += `<tr bgcolor=\"#FFDEAD\"><th>ID </th><th>PRODUCT_NAME </th></tr>`;\n  for(i=0;i<result.length;i++)\n    {\n table=table+\"<tr bgcolor='#E0FFFF'><td>\"+result[i].id+\"</td><td>\"+result[i].product_name+\"</td></tr>\";\n}\n    table += \"</table>\";\n\nreturn {\"table\" : table};"
      },
      "name": "Construct HTML",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1660,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$node[\"Get PO by PO Number\"].json[\"data\"].length > 0 ?true : false}}",
              "value2": true
            }
          ]
        }
      },
      "name": "Check PO Exist",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1240,
        160
      ]
    },
    {
      "parameters": {
        "fromEmail": "noreply@shakedeal.com",
        "toEmail": "chidanand@shakedeal.com,surya.kc@shakedeal.com,parthiban.n@shakedeal.com,vinay.kumar@shakedeal.com,aditya.darira@shakedeal.com,vinod.raj@shakedeal.com",
        "subject": "=Siemens :This PO already exist with PO number - {{$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"id\"]}}",
        "html": "=<h1 class=\"my-4 display-4 text-center\">This PO already exist with PO number:{{$node[\"Extracting po details\"].json[\"area\"][\"pos\"][\"id\"]}}</h1>",
        "options": {}
      },
      "name": "Send PO Exist Mail",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1460,
        60
      ],
      "credentials": {
        "smtp": {
          "id": "7",
          "name": "AWS SES Creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_pos?filter={\"id\":{\"_eq\":\"{{$node[\"Get the PO number and subject\"].json[\"purchaseOrderNumber\"]}}\"}}",
        "options": {}
      },
      "name": "Get PO by PO Number",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1000,
        160
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "noreply@shakedeal.com",
        "toEmail": "chidanand@shakedeal.com,surya.kc@shakedeal.com,parthiban.n@shakedeal.com,vinay.kumar@shakedeal.com,aditya.darira@shakedeal.com",
        "subject": "Ad Hoc Product Created on Adani Platform",
        "html": "=<div>Hi Siddesh,</div><br/><br/>\n\nPFA the list of ad hoc products that has been created on Mini Mozart platform. As per our process, I kindly request your assistance in notifying the catalogue team to catalogue the newly added product.<br/><br/>\n\nThank you for your cooperation and swift attention to this matter.<br/><br/>\n\nBest regards,<br/><br/>\n\nTeam ShakeDeal<br/><br/>\n\n{{$node[\"Construct HTML\"].json[\"table\"]}}",
        "options": {}
      },
      "id": "4451458d-0178-4531-bb12-60e3d4add6d2",
      "name": "Adhoc Product Created Mail",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1860,
        740
      ],
      "credentials": {
        "smtp": {
          "id": "7",
          "name": "AWS SES Creds"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Wait for Po Email\"].json[\"subject\"]}}",
              "operation": "contains",
              "value2": "=PO"
            }
          ]
        }
      },
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        380
      ]
    },
    {
      "parameters": {},
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1100,
        400
      ]
    },
    {
      "parameters": {
        "functionCode": "items[0].json.attachmentIndex = items[0].binary ? Object.values(items[0].binary).findIndex(key => key.mimeType === \"application/pdf\") : -1;\nif(items[0].json.attachmentIndex !== -1){\n  items[0].json.data = items[0].binary[items[0].json.attachmentIndex];\n}\n\nlet emailSubject = $node[\"Wait for Po Email\"].json[\"subject\"];\n\npurchaseOrderNumber = emailSubject.split(\":-\")[1].trim();\n\nitems[0].json.dms_url = \"https://adaniqa.shakedeal.com\"\nitems[0].json.purchaseOrderNumber= purchaseOrderNumber;\nitems[0].json.emailSubject= emailSubject;\nreturn items;"
      },
      "name": "Get the PO number and subject",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        340,
        380
      ]
    },
    {
      "parameters": {
        "functionCode": "let poData=$node[\"Read PDF\"].json[\"text\"];\n\nlet startIndexPoDetails=poData.indexOf(\"Purchase Order\");\n// let endIndexPoDetails=poData.indexOf(\"Order Value Summary\"); \nlet endIndexPoDetails=poData.indexOf(\"In words, RUPEES\");\n\nlet startIndexPoItems=poData.indexOf(\"ANNEXURE-I\");\nlet endIndexPoItems=poData.indexOf(\"Total No. Of Items\");\n\nlet poItems=poData.substring(startIndexPoItems,endIndexPoItems).split('\\n');\n\nlet poExtracted=[]; \n\nlet skip=false;\nfor (i = 0; i < poItems.length; i++) {\n  if(poItems[i].includes(\"Disclaimer\")){\n    skip=true;\n  }\n  if(skip && poItems[i].includes(\"Sr. No.Material Code/DescriptionUOM\") && poItems[i+1].includes(\"Quantity\")){\n    skip=false;\n    i=i+2;\n  }\n  if(!skip){\n    poExtracted.push(poItems[i]);\n  }\n}\n\nitems[0]={\n  \"poDetails\":poData.substring(startIndexPoDetails,endIndexPoDetails).split('\\n'),\n  \"poItems\":poExtracted\n};\n\nreturn items[0];"
      },
      "name": "Extract PO Details & Items",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1600,
        380
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {},
      "name": "Wait for Po Email",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        120,
        380
      ]
    },
    {
      "parameters": {
        "functionCode": "let address=[\n    {\n        \"gstin\":\"24AAECB3981A1Z3\",\n        \"shipment_address\":\"Adani Forwarding Agent Limited, Survey No. 44/1, Village Tumb, Tal- Umbergaon, Dist- Valsad\",\n        \"street_address\":\"Adani Forwarding Agent Limited, SERVEY NO 44/1, 44/1/2 Village Tumb, Tal- Umbergaon\",\n        \"city\":\"Village Tumb\",\n        \"state\":\"Gujarat\",\n        \"country\":\"India\",\n        \"pincode\":396150,\n        \"ship_street_address\":\"Adani Forwarding Agent Limited, SERVEY NO 44/1, 44/1/2 Village Tumb, Tal- Umbergaon\",       \n        \"ship_city\":\"Village Tumb\",\n        \"ship_state\":\"Gujarat\",\n        \"ship_country\":\"India\",\n        \"ship_pincode\":\"396150\"\n    },\n];\n\nlet area = {\n    pos: {\n        id: '',\n        po_value: '',\n        po_net_value: '',\n        po_taxes: '',\n        po_other_taxes: '',\n        po_date: '',\n        po_delivery_date: '',\n        shipment_address: '',\n        street_address: '',\n        gstin: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        ship_street_address: '',\n        ship_pincode: '',\n        ship_city: '',\n        ship_state: '',\n        ship_country: '',\n        poc_name: null,\n        poc_contact_number: null,\n        poc_email: null,\n        po_items: [],\n        products: [],\n        calculated_gross_price:0,\n        po_document:'',\n        po_value_mismatch:false\n    },\n}\n\nconst poDetaillines = $node[\"Extract PO Details & Items\"].json[\"poDetails\"];\n\nlet buyerDetailsFound=false;\nlet orderValueSummaryFound=false;\nlet poItemsFound=false;\nlet completeAddressFound=false;\n\nlet shippingAddress=new String();\n\nfor (i = 0; i < poDetaillines.length; i++) {\n\n    // PO Number\n    if (poDetaillines[i].includes(\"PO No\") && !area.pos.id) {\n        area.pos.id = poDetaillines[i].split(\":\")[1].trim();\n    }\n\n    // PO Date\n    if (poDetaillines[i].includes(\"PO Release Date\") && !area.pos.po_date) {\n        area.pos.po_date = new Date(poDetaillines[i].split(\":\")[1].trim().split(\".\").reverse().join(\"-\"));\n    }\n\n    //check buyer detials started\n    if(poDetaillines[i].includes(\"Buyer's details\")){\n        buyerDetailsFound=true;\n        i=i+1;\n    }    \n\n    if(buyerDetailsFound){\n        //Address\n        while(!completeAddressFound && !poDetaillines[i].includes(\"PAN\")){\n            shippingAddress=shippingAddress+poDetaillines[i]+\" \";\n            i=i+1;\n        }\n        completeAddressFound=true;\n        if(!area.pos.shipment_address){\n            area.pos.shipment_address=shippingAddress.trim();\n        }\n\n        // PAN number\n        if (poDetaillines[i].includes(\"PAN\") && !area.pan) {            \n            area.pan = poDetaillines[i].replace(\"PAN\",\"\");\n        }\n\n        // GSTIN\n        if (poDetaillines[i].includes(\"GSTIN\") && !area.pos.gstin) {            \n            area.pos.gstin = poDetaillines[i].replace(\"GSTIN\",\"\");\n        }\n        \n        // POC Name\n        if (poDetaillines[i].includes(\"Name\") && !area.pos.poc_name) {\n            area.pos.poc_name = poDetaillines[i].replace(\"Name\",\"\");\n        }\n\n        // POC Contact Number\n        if (poDetaillines[i].includes(\"Phone\") && !area.pos.poc_contact_number) {\n            area.pos.poc_contact_number = parseInt(poDetaillines[i].replace(\"Phone\",\"\").replace(\"+\",\"\"));\n        }\n\n        // POC Email\n        if (poDetaillines[i].includes(\"Email\") && !area.pos.poc_email) {\n            area.pos.poc_email = poDetaillines[i].replace(\"Email\",\"\");\n        }\n    }\n\n    //check order value summary started\n    if(poDetaillines[i].includes(\"Order Value Summary\")){\n        orderValueSummaryFound=true;\n    }\n\n    if(orderValueSummaryFound){\n\n        //PO Net Value with out tax\n        if (poDetaillines[i].includes(\"Basic Price\") && !area.pos.po_net_value) {\n            area.pos.po_net_value = parseFloat(poDetaillines[i+1].replace(\"INR\",\"\").replaceAll(',', '').trim());\n        }\n\n        //PO tax\n        if (poDetaillines[i].includes(\"Taxes\") && !area.pos.po_taxes) {\n            area.pos.po_taxes = parseFloat(poDetaillines[i+1].replace(\"INR\",\"\").replaceAll(',', '').trim());\n        }\n\n        //PO other tax\n        if (poDetaillines[i].includes(\"Other Charges\") && !area.pos.po_other_taxes) {\n            area.pos.po_other_taxes = parseFloat(poDetaillines[i+1].replace(\"INR\",\"\").replaceAll(',', '').trim());\n        }\n\n        //PO Value with  tax\n        if (poDetaillines[i].includes(\"PO Price\") && !area.pos.po_value) {\n            area.pos.po_value = parseFloat(poDetaillines[i+1].replace(\"INR\",\"\").replaceAll(',', '').trim());\n        }\n    }  \n}\n\n//Address Details\nlet addressDetails=address.find(a => a.gstin == area.pos.gstin);\nif(addressDetails){\n    area.pos.shipment_address=addressDetails.shipment_address,\n    area.pos.street_address=addressDetails.street_address,\n    area.pos.city=addressDetails.city,\n    area.pos.state=addressDetails.state,\n    area.pos.country=addressDetails.country,\n    area.pos.pincode=addressDetails.pincode,\n    area.pos.ship_street_address=addressDetails.ship_street_address,    \n    area.pos.ship_city=addressDetails.ship_city,\n    area.pos.ship_state=addressDetails.ship_state,\n    area.pos.ship_country=addressDetails.ship_country,\n    area.pos.ship_pincode=addressDetails.ship_pincode\n}\n\n// All Items\nconst poItemlines = $node[\"Extract PO Details & Items\"].json[\"poItems\"];\n\nfor(j = 0; j < poItemlines.length; j++)\n{    \n    \n    if(poItemlines[j].includes(\"ANNEXURE-I\") && poItemlines[j+1].includes(\"PRICE SCHEDULE\")){\n        poItemsFound=true;\n    }\n\n    if(poItemsFound){\n        if(poItemlines[j].includes(\"Sr. No.Material Code/DescriptionUOM\") && poItemlines[j+1].includes(\"Quantity\")){\n            j=j+2; //Added i+2 to skip 2 lines so that can get serial number and matcode\n            \n            //All PRoduct Items Iteration\n            while(j<=poItemlines.length && !poItemlines[j]==\"\"){\n\n                // PRODUCTS\n                let productDetails = {\n                    id: '',\n                    product_name: '',\n                    hsn: '',\n                    product_type: 2\n                }\n\n\n                // PO_ITEMS\n                let poItemDetails = {\n                    id: '',\n                    hsn: '',\n                    uom: '',\n                    product: '',\n                    ordered_qty: '',\n                    unit_price: '',\n                    net_price: '',\n                    gross_price: '',\n                    tax_percentage: '',\n                    tax_value: '',\n                    description: '',\n                    delivery_date:''\n                }\n\n                let productName=new String();\n                let productDescription=new String();\n\n                let serialNumber = poItemlines[j].trim().substring(0,poItemlines[j].trim().length - 10).trim();\n                let matCode =poItemlines[j].slice(-10);\n                let unitPrice=0;\n                let netTotal=0;\n                let grossTotal=0;\n                let gst=0;\n                let totalTax=0;\n                let deliveryDate='';\n\n                j=j+1; //Added i+1 to skip 1 line and get HSN\n                let hsn=poItemlines[j].replace(\"HSN No:\",\"\").trim();\n\n                //To get Product Name\n                j=j+1;\n                const decimalRegex = /^-?\\d+(\\.\\d+)?$/;\n                \n                while(j<=poItemlines.length &&  (!decimalRegex.test(poItemlines[j].trim()) || !poItemlines[j].includes(\".000\")) ){\n                    productName=productName+poItemlines[j]+\" \";\n                    j++;                    \n                }\n                \n                //To get index of occurence of UOM so that in product name it can be removed\n                let uomLastIndex=productName.lastIndexOf(poItemlines[j-1]);    \n                productName=productName.substring(0,uomLastIndex).trim();  \n\n                // To get UOM\n                let uom=poItemlines[j-1].trim();\n\n                //To get quantity\n                let qty=parseFloat(poItemlines[j].replaceAll(',', '').trim());\n\n                //To get Product Description\n                j=j+1;\n                while(j<=poItemlines.length && !poItemlines[j].includes(\"Currency\")){\n                    productDescription=productDescription+poItemlines[j]+\" \";\n                    j++;\n                }                 \n               \n                //To loop till product detials ends\n                while(j < poItemlines.length-1 && !poItemlines[j].replace(/ /g, \"\").includes(\"DateQuantityPlant\")){\n                    if(poItemlines[j].includes(\"Item Basic PriceINR\")){\n                        let unitAndNetTotal=poItemlines[j+1].trim().split(\" \");\n                        unitPrice=parseFloat(unitAndNetTotal[0].replaceAll(',', '').trim());\n                        netTotal=parseFloat(unitAndNetTotal[1].replaceAll(',', '').trim());\n                    }\n                    if(poItemlines[j].includes(\"Item PO Price\")){\n                        grossTotal=parseFloat(poItemlines[j+1].replaceAll(',', '').trim());\n                    }\n                    if(poItemlines[j].includes(\"CGST\")){\n                        gst=parseFloat(poItemlines[j].replace(\"CGST\",\"\").replaceAll('%','').trim())*2;\n                        totalTax=parseFloat(poItemlines[j+1].replaceAll(',', '').trim())*2;\n                    }\n                    if(poItemlines[j].includes(\"IGST\")){\n                        gst=parseFloat(poItemlines[j].replace(\"IGST\",\"\").replaceAll('%','').trim());\n                        totalTax=parseFloat(poItemlines[j+1].replaceAll(',', '').trim());\n                    }\n                    j++;\n                }   \n                \n                deliveryDate=poItemlines[j+1]?new Date(poItemlines[j+1].split(\" \")[0].split(\".\").reverse().join(\"-\")):\"\";  \n                if(!area.pos.po_delivery_date || area.pos.po_delivery_date < deliveryDate){\n                    area.pos.po_delivery_date= deliveryDate;\n                }\n                j=j+2;\n\n                poItemDetails.id=area.pos.id+\"-\"+serialNumber;\n                poItemDetails.hsn=hsn;\n                poItemDetails.product=matCode;\n                poItemDetails.uom=uom;\n                poItemDetails.ordered_qty=qty;\n                poItemDetails.description=productDescription;\n                poItemDetails.unit_price=unitPrice;\n                poItemDetails.net_price=netTotal;\n                poItemDetails.gross_price=grossTotal;\n                poItemDetails.tax_percentage=gst;\n                poItemDetails.tax_value=totalTax;\n                poItemDetails.delivery_date=deliveryDate; \n                             \n\n                productDetails.id=matCode;\n                productDetails.hsn=hsn;\n                productDetails.product_name=productName?productName:productDescription.substring(0,50);\n                \n                area.pos.po_items.push(poItemDetails);\n                area.pos.products.push(productDetails);\n                area.pos.calculated_gross_price=area.pos.calculated_gross_price+(unitPrice*qty)+((unitPrice*qty)*(gst/100));               \n\n            }\n        }        \n    }\n}\n\nlet products = area.pos.products;\narea.pos.po_document = $node[\"Post the file\"].json[\"data\"][\"id\"];\narea.pos.po_value_mismatch=area.pos.calculated_gross_price==area.pos.po_value?false:true;\n\nlet productIds = products.map(product => product.id);\nitems[0].json.area = area;\nitems[0].json.productIds = productIds;\nitems[0].json.products = products;\n\nreturn items;\n"
      },
      "name": "Extracting po details",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1880,
        380
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_po_errors",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "po_number",
              "value": "={{$node[\"Get the PO number and subject\"].json[\"purchaseOrderNumber\"]}}"
            }
          ]
        }
      },
      "name": "Create PO error record",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1400,
        360
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Get the PO number and subject\"].json[\"dms_url\"]}}/items/sds_po_errors/{{$node[\"Create PO error record\"].json[\"data\"][\"id\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "po_created",
              "value": "={{true}}"
            }
          ]
        }
      },
      "name": "Make PO created true",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2120,
        960
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "89",
          "name": "Seimens Noir PDF"
        }
      }
    }
  ],
  "settings": {
    "saveExecutionProgress": "DEFAULT",
    "errorWorkflow": "364"
  },
  "staticData": null,
  "tags": [
    {
      "id": "8",
      "name": "Adani",
      "createdAt": "2023-09-14T09:19:59.003Z",
      "updatedAt": "2023-09-14T09:19:59.003Z"
    }
  ],
  "updatedAt": "2023-12-05T10:05:53.452Z"
}