{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "access token generated by refresh token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "access token generated by refresh token": {
      "main": [
        [
          {
            "node": "Get po_details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Function to create vendor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function for item objects": {
      "main": [
        [
          {
            "node": "Check for item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get taxes": {
      "main": [
        [
          {
            "node": "Function for item objects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp": {
      "main": [
        [
          {
            "node": "Get taxes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create item": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Condition for creating item": {
      "main": [
        [
          {
            "node": "Function for create item",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Existing Products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function for create item": {
      "main": [
        [
          {
            "node": "create item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Function to create po",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Existing Products": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Check for item": {
      "main": [
        [
          {
            "node": "Condition for creating item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for vendor": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to create vendor": {
      "main": [
        [
          {
            "node": "create vendor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create vendor": {
      "main": [
        [
          {
            "node": "Get taxes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Customer": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to create contact": {
      "main": [
        [
          {
            "node": "create contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Function to create contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create contact": {
      "main": [
        [
          {
            "node": "Check for vendor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp1": {
      "main": [
        [
          {
            "node": "Check for vendor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get po_details": {
      "main": [
        [
          {
            "node": "Check for Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to create po": {
      "main": [
        [
          {
            "node": "create po",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create po": {
      "main": [
        [
          {
            "node": "Update the vendor po_num",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update the vendor po_num": {
      "main": [
        [
          {
            "node": "Create vendor invoice details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get PO attachment": {
      "main": [
        [
          {
            "node": "Move Binary Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move Binary Data": {
      "main": [
        [
          {
            "node": "Upload PO in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload PO in vpanel": {
      "main": [
        [
          {
            "node": "Check for vendor in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for vendor in vpanel": {
      "main": [
        [
          {
            "node": "Condition for checking vendor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Condition for checking vendor": {
      "main": [
        [
          {
            "node": "Create vendor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create vendor": {
      "main": [
        [
          {
            "node": "Create vendor details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create vendor details": {
      "main": [
        [
          {
            "node": "Function for getting sku",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp2": {
      "main": [
        [
          {
            "node": "Function for getting sku",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function for getting sku": {
      "main": [
        [
          {
            "node": "Get the products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the products": {
      "main": [
        [
          {
            "node": "Function to create products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to create products": {
      "main": [
        [
          {
            "node": "Checking condition whether to post the products ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Checking condition whether to post the products ": {
      "main": [
        [
          {
            "node": "post product details",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "post product details": {
      "main": [
        [
          {
            "node": "Create po in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp3": {
      "main": [
        [
          {
            "node": "Create po in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create po in vpanel": {
      "main": [
        [
          {
            "node": "Function to map po and product",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to map po and product": {
      "main": [
        [
          {
            "node": "Map po and products",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create vendor invoice details": {
      "main": [
        [
          {
            "node": "Get PO attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-06-01T05:58:55.158Z",
  "id": "125",
  "name": "Create purchase order",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -380,
        -20
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "create_po",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -580,
        300
      ],
      "webhookId": "e527030c-1bfc-4f07-8b57-24aa8cae6d0d"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://accounts.zoho.com/oauth/v2/token\n",
        "options": {},
        "headerParametersUi": {
          "parameter": []
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "client_id",
              "value": "=1000.WBSVSVM7UXFERT32STIOQLG3CFWOKP"
            },
            {
              "name": "grant_type",
              "value": "refresh_token"
            },
            {
              "name": "redirect_uri",
              "value": "http://localhost:5678/webhook-test/sd_invoice"
            },
            {
              "name": "client_secret",
              "value": "=71afde1862948a64f91e451cdfe7f8c78250d32f7e"
            },
            {
              "name": "refresh_token",
              "value": "=1000.5ff4be7b6c923c0d40d2b96565226359.bd12d19eea668016c7e40b698bb6a0a0"
            }
          ]
        }
      },
      "name": "access token generated by refresh token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -400,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [],
          "number": [
            {
              "value1": "={{$node[\"Check for vendor\"].json[\"contacts\"].length}}",
              "operation": "equal"
            }
          ]
        }
      },
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {},
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1160,
        480
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/items?organization_id=685685414",
        "allowUnauthorizedCerts": true,
        "options": {},
        "headerParametersUi": {
          "parameter": []
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "sku",
              "value": "={{$node[\"Function for item objects\"].json[\"0\"][\"sku\"]}}"
            }
          ]
        }
      },
      "name": "Check for item",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2000,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "\nlet pro_items=$node[\"Get po_details\"].json[\"data\"][\"product_details\"]\nlet returnItems =[]\npro_items.forEach(function(obj,index){  \n    returnItems.push({\n    json: [{\n       name:obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_name\"],\n       rate:obj[\"rate\"],\n       sku:obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"],\n       item_type :obj[\"item_type\"] \n    }]\n  });\n  \n})\n\nreturn returnItems;"
      },
      "name": "Function for item objects",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1800,
        260
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/settings/taxes?organization_id=685685414",
        "options": {}
      },
      "name": "Get taxes",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1380,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://books.zoho.com/api/v3/items?organization_id=685685414",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "batchInterval": 10,
          "batchSize": 1,
          "bodyContentType": "json"
        },
        "bodyParametersJson": "={{$node[\"Function for create item\"].json[\"0\"]}}"
      },
      "name": "create item",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2560,
        20
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 1000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"Check for item\"].json[\"items\"].length}}",
              "operation": "equal"
            }
          ]
        }
      },
      "name": "Condition for creating item",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2180,
        260
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "functionCode": "let list_items = $node[\"Get po_details\"].json[\"data\"][\"product_details\"]\nlet zoho_taxes = $node[\"Get taxes\"].json[\"taxes\"];\n\nlet returnItems = []\nlet resultFilter = \n   list_items.filter(list=>\n      items.some(\n      data=> data.json[\"page_context\"][\"search_criteria\"][0][\"search_text\"] === list[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"]\n    )\n  );\n\n\nresultFilter .forEach(function(obj,index){ \n    //let taxes = obj.item_tax_preferences;\n    //let igst_tax_name =  \"IGST\";\n    //let gst_tax_name =  \"GST\";\n    let igst_tax_name = \"IGST\"+obj.tax_percentage;\n    let gst_tax_name = \"GST\"+obj.tax_percentage;\n    let igst_taxid_obj = zoho_taxes.filter(tax=>tax.tax_name == igst_tax_name);\n    let gst_taxid_obj = zoho_taxes.filter(tax=>tax.tax_name == gst_tax_name);\n    returnItems.push({\n    json: [{\n       name:obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_name\"],\n       item_type :obj.sd_mozart_vendor_product_mapping_id.product.type,\n       sku:obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"],\n       hsn_or_sac:obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"hsn\"],\n       available_stock:0,\n       purchase_account_id:\"1763031000000293201\",\n       purchase_account_name: \"Purchase Domestic\",\n       item_type: \"inventory\",\n       \"item_tax_preferences\": [\n          {\n              \"tax_specification\": \"inter\",\n              \"tax_type\": 2,\n              \"tax_name\": igst_tax_name,\n              \"tax_percentage\": obj.tax_percentage,\n              \"tax_id\": igst_taxid_obj[0].tax_id\n          },\n          {\n              \"tax_specification\": \"intra\",\n              \"tax_type\": 2,\n              \"tax_name\": gst_tax_name,\n              \"tax_percentage\": obj.tax_percentage,\n              \"tax_id\": gst_taxid_obj[0].tax_id\n          }\n        ],\n    }]\n  }); \n})\n\nreturn returnItems ;\n\n"
      },
      "name": "Function for create item",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2260,
        20
      ],
      "continueOnFail": true
    },
    {
      "parameters": {},
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        2560,
        260
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "name": "Existing Products",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        2380,
        400
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/vendors/?organization_id=685685414&contact_name={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_company\"]}}&gst_no={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"gstin\"]}}",
        "allowUnauthorizedCerts": true,
        "options": {}
      },
      "name": "Check for vendor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        620,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let contact_name=$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_company\"]\nlet tax_treatment = \"\";\nlet gst_treatment = \"\";\nlet contact_type = \"vendor\"; \nlet JSONString={\n  \"contact_name\":contact_name\n }\n if($node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"is_sez\"] == \"1\"){\n   tax_treatment = \"business_sez\";\n   gst_treatment = \"business_sez\";\n }else if($node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"gstin\"] && $node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"is_sez\"] == \"0\"){\n   tax_treatment = \"business_gst\";\n   gst_treatment = \"business_gst\";\n }else {\n   tax_treatment = \"consumer\";\n   gst_treatment = \"consumer\";\n }\n let billing_address= {\n    \"address\": $node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_address\"]\n}\n items[0].json.contact_type = contact_type;\n items[0].json.tax_treatment = tax_treatment;\n items[0].json.gst_treatment = gst_treatment;\n items[0].json.billing_address = billing_address;\n items[0].json.JSONString=JSONString;\nreturn items;"
      },
      "name": "Function to create vendor",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        960,
        40
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://books.zoho.com/api/v3/vendors/?organization_id=685685414",
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "billing_address",
              "value": "={{$node[\"Function to create vendor\"].json[\"billing_address\"]}}"
            },
            {
              "name": "shipping_address",
              "value": "={{$node[\"Function to create vendor\"].json[\"billing_address\"]}}"
            },
            {
              "name": "contact_name",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_company\"]}}"
            },
            {
              "name": "first_name",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_name\"]}}"
            },
            {
              "name": "email",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_email\"]}}"
            },
            {
              "name": "mobile",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_phone\"]}}"
            },
            {
              "name": "place_of_contact",
              "value": "=KA"
            },
            {
              "name": "contact_type",
              "value": "={{$node[\"Function to create vendor\"].json.contact_type}}"
            },
            {
              "name": "gst_no",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"gstin\"]}}"
            },
            {
              "name": "gst_treatment",
              "value": "={{$node[\"Function to create vendor\"].json.gst_treatment}}"
            },
            {
              "name": "company_name",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_company\"]}}"
            }
          ]
        }
      },
      "name": "create vendor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1340,
        40
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/contacts/?organization_id=685685414",
        "allowUnauthorizedCerts": true,
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "contact_name",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"po_num\"][\"issuer_name\"][\"company_name\"]}}"
            }
          ]
        }
      },
      "name": "Check for Customer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        20,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let contact_name=$node[\"wait for order data\"].json[\"body\"][\"contact_name\"]\nlet tax_treatment = \"\";\nlet gst_treatment = \"\";\nlet contact_type = \"customer\"; \nlet JSONString={\n  \"contact_name\":contact_name\n }\n if($node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"is_sez\"] == \"1\"){\n   tax_treatment = \"business_sez\";\n   gst_treatment = \"business_sez\";\n }else if($node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"gst_no\"] && $node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"is_sez\"] == \"0\"){\n   tax_treatment = \"business_gst\";\n   gst_treatment = \"business_gst\";\n }else {\n   tax_treatment = \"consumer\";\n   gst_treatment = \"consumer\";\n }\n items[0].json.contact_type = contact_type;\n items[0].json.tax_treatment = tax_treatment;\n items[0].json.gst_treatment = gst_treatment;\n items[0].json.JSONString=JSONString;\nreturn items;"
      },
      "name": "Function to create contact",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        300,
        40
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://books.zoho.com/api/v3/contacts?organization_id={{$node[\"Globals\"].json[\"organization_id\"]}}",
        "allowUnauthorizedCerts": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "billing_address",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"billing_address\"]}}"
            },
            {
              "name": "shipping_address",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"shipping_address\"]}}"
            },
            {
              "name": "contact_name",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"company_name\"]}}"
            },
            {
              "name": "first_name",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"first_name\"]}}"
            },
            {
              "name": "last_name",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"last_name\"]}}"
            },
            {
              "name": "email",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"email\"]}}"
            },
            {
              "name": "mobile",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"mobile\"]}}"
            },
            {
              "name": "place_of_contact",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"place_of_contact\"]}}"
            },
            {
              "name": "contact_type",
              "value": "={{$node[\"Function to create contact\"].json.contact_type}}"
            },
            {
              "name": "gst_no",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"gst_no\"]}}"
            },
            {
              "name": "gst_treatment",
              "value": "={{$node[\"Function to create contact\"].json.gst_treatment}}"
            },
            {
              "name": "pan_no",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"pan_no\"]}}"
            },
            {
              "name": "company_name",
              "value": "={{$node[\"wait for order data\"].json[\"body\"][\"contact_details\"][\"company_name\"]}}"
            }
          ]
        }
      },
      "name": "create contact",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        580,
        40
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [],
          "number": [
            {
              "value1": "={{$node[\"Check for Customer\"].json[\"contacts\"].length}}",
              "operation": "equal"
            }
          ]
        }
      },
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        220,
        300
      ]
    },
    {
      "parameters": {},
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        440,
        500
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://sdqa.mozart.shakedeal.com/items/sd_mozart_vendor_po_details/{{$node[\"Webhook\"].json[\"body\"][\"keys\"][0]}}?fields=vendor_po_number,id,po_date,po_value,vendor.*,product_details.*,product_details.sd_mozart_vendor_product_mapping_id.*,product_details.sd_mozart_vendor_product_mapping_id.product.*,po_num.*,po_num.issuer_name.*,po_num.issuer_name.user.*,delivery_address,po_num.source_of_supply.*,po_num.destination_of_supply.*",
        "options": {
          "ignoreResponseCode": true
        }
      },
      "name": "Get po_details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -200,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "=https://sdqa.mozart.shakedeal.com/items/sd_mozart_vendor_po_details/{{$node[\"Webhook\"].json[\"body\"][\"keys\"][0]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "vendor_po_number",
              "value": "={{$node[\"create po\"].json[\"purchaseorder\"][\"purchaseorder_number\"]}}"
            }
          ]
        }
      },
      "name": "Update the vendor po_num",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3360,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "\nlet pro_items=$node[\"Get po_details\"].json[\"data\"][\"product_details\"]\n//let payment_terms = $node[\"wait for order data\"].json[\"body\"][\"payment_terms\"]?$node[\"wait for order data\"].json[\"body\"][\"payment_terms\"]:\"Advance\";\nconst id= [];\nconst custom_fields=[];\nlet contact_id=\"\"\n// custom_fields.push(\n//     {\n//         label:\"PO Date\",\n//         value:$node[\"wait for order data\"].json[\"body\"][\"po_date\"]\n//     }\n    \n// )\n\nfor (const [index,item] of items.entries()) {\n  if(item.json.hasOwnProperty(\"code\")){\n     let list = pro_items.find(data=>data[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_name\"] === (item.json.hasOwnProperty(\"item\")?item.json[\"item\"][\"name\"]:item.json[\"items\"][0][\"item_name\"]))\n     id.push(\n     {\n         item_id: item.json.hasOwnProperty(\"item\")?item.json[\"item\"][\"item_id\"]:item.json[\"items\"][0][\"item_id\"],\n         quantity:list[\"req_qty\"],\n         rate:list[\"rate\"],\n         reverse_charge_tax_id:\"\",\n         product_type: \"service\",\n         tax_id: item.json.hasOwnProperty(\"item\")?item.json[\"item\"][\"item_tax_preferences\"][0][\"tax_id\"]:item.json[\"items\"][0][\"item_tax_preferences\"][0][\"tax_id\"],\n         //tax_name: \"IGST18\",\n         //tax_type: \"tax\",\n        // tax_percentage: 18,\n     }); \n  }   \n}\nif($node[\"Check for Customer\"].json[\"contacts\"].length!==0){\n    contact_id=$node[\"Check for Customer\"].json[\"contacts\"][0][\"contact_id\"]\n}else{\n    contact_id=$node[\"create contact\"].json[\"contact\"][\"contact_id\"]\n}\nlet delivery_address= {\n    \"address\": $node[\"Get po_details\"].json[\"data\"][\"delivery_address\"]\n}\nlet invoice_obj={\n \"delivery_customer_id\":contact_id,\n  \"line_items\":id,\n \"date\":$node[\"Get po_details\"].json[\"data\"][\"po_date\"],\n \"reference_number\":\"1test\"+$node[\"Get po_details\"].json[\"data\"][\"po_num\"][\"po_num\"],\n //\"salesperson_name\":$node[\"wait for order data\"].json[\"body\"][\"salesperson_name\"],\n //\"custom_fields\":custom_fields,\n \"payment_terms\":30,\n //\"discount\": $node[\"wait for order data\"].json[\"body\"][\"discount\"],\n //\"shipping_charge\":$node[\"wait for order data\"].json[\"body\"][\"shipping_charge\"],\n //\"billing_address\":$node[\"wait for order data\"].json[\"body\"][\"billing_address\"],\n //\"shipping_address\":$node[\"wait for order data\"].json[\"body\"][\"shipping_address\"],\n \"source_of_supply\":$node[\"Get po_details\"].json[\"data\"][\"po_num\"][\"source_of_supply\"][\"code\"],\n \"destination_of_supply\":$node[\"Get po_details\"].json[\"data\"][\"po_num\"][\"destination_of_supply\"][\"code\"],\n \"is_discount_before_tax\":false,\n \"vendor_id\":$node[\"Check for vendor\"].json[\"contacts\"][0][\"contact_id\"],\n \"delivery_address\":delivery_address\n}  \nlet returnItems = []\nreturnItems.push({\njson:invoice_obj\n})\nreturn returnItems ;\n"
      },
      "name": "Function to create po",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2920,
        260
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://books.zoho.com/api/v3/purchaseorders?organization_id=685685414",
        "allowUnauthorizedCerts": true,
        "options": {
          "bodyContentType": "json",
          "ignoreResponseCode": false
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "delivery_customer_id",
              "value": "={{$node[\"Function to create po\"].json[\"delivery_customer_id\"]}}"
            },
            {
              "name": "line_items",
              "value": "={{$node[\"Function to create po\"].json[\"line_items\"]}}"
            },
            {
              "name": "reference_number",
              "value": "={{$node[\"Function to create po\"].json[\"reference_number\"]}}"
            },
            {
              "name": "date",
              "value": "={{$node[\"Function to create po\"].json[\"date\"]}}"
            },
            {
              "name": "payment_terms",
              "value": "={{$node[\"Function to create po\"].json[\"payment_terms\"]}}"
            },
            {
              "name": "discount_type",
              "value": "=entity_level"
            },
            {
              "name": "is_discount_before_tax",
              "value": "={{$node[\"Function to create po\"].json[\"is_discount_before_tax\"]}}"
            },
            {
              "name": "source_of_supply",
              "value": "={{$node[\"Function to create po\"].json[\"source_of_supply\"]}}"
            },
            {
              "name": "destination_of_supply",
              "value": "={{$node[\"Function to create po\"].json[\"destination_of_supply\"]}}"
            },
            {
              "name": "vendor_id",
              "value": "={{$node[\"Function to create po\"].json[\"vendor_id\"]}}"
            },
            {
              "name": "tax_exemption_code",
              "value": "={{\"GST TAXABLE\"}}"
            },
            {
              "name": "reverse_charge_tax_id",
              "value": "={{\"\"}}"
            }
          ]
        }
      },
      "name": "create po",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3160,
        260
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/purchaseorders/{{$node[\"create po\"].json[\"purchaseorder\"][\"purchaseorder_id\"]}}?organization_id=685685414&accept=pdf",
        "responseFormat": "file",
        "dataPropertyName": "po_file",
        "options": {}
      },
      "name": "Get PO attachment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3700,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.vpanel.shakedeal.com/files",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "bodyContentType": "multipart-form-data"
        },
        "sendBinaryData": true,
        "binaryPropertyName": "=input_file:po_file"
      },
      "name": "Upload PO in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        4040,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "setAllData": false,
        "sourceKey": "po_file",
        "options": {
          "keepSource": true,
          "keepAsBase64": true
        }
      },
      "name": "Move Binary Data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        3860,
        260
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://sdqa.vpanel.shakedeal.com/items/sdv_vendors?filter={\"vendor\":{ \"email\": { \"_eq\": \"{{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_email\"]}}\" }}}",
        "options": {}
      },
      "name": "Check for vendor in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        4300,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"Check for vendor in vpanel\"].json.data.length}}",
              "operation": "equal"
            }
          ]
        }
      },
      "name": "Condition for checking vendor",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4520,
        260
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.vpanel.shakedeal.com/users",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "first_name",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_name\"]}}"
            },
            {
              "name": "email",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_email\"]}}"
            },
            {
              "name": "password",
              "value": "=vendor@123"
            }
          ]
        }
      },
      "name": "Create vendor",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        4580,
        -20
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.vpanel.shakedeal.com/items/sdv_vendors",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "vendor",
              "value": "={{Array.isArray($node[\"Create vendor\"].json.data)?$node[\"Create vendor\"].json.data[0].id:$node[\"Create vendor\"].json.data.id}}"
            },
            {
              "name": "vendor_phone",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_phone\"]}}"
            },
            {
              "name": "vendor_company",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_company\"]}}"
            },
            {
              "name": "vendor_address",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"vendor_address\"]}}"
            },
            {
              "name": "gstin",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"vendor\"][\"gstin\"]}}"
            }
          ]
        }
      },
      "name": "Create vendor details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        5020,
        -20
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {},
      "name": "NoOp2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4780,
        480
      ]
    },
    {
      "parameters": {
        "functionCode": "let products = $node[\"Get po_details\"].json[\"data\"][\"product_details\"];\n\nlet product_codes = [];\nproducts.forEach(function(obj,index){\n    product_codes.push(obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"])\n})\n\nitems[0].json.product_codes = product_codes;\nreturn items;"
      },
      "name": "Function for getting sku",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        5040,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://sdqa.vpanel.shakedeal.com/items/sdv_products?filter={ \"product_code\": { \"_in\": \"{{$node[\"Function for getting sku\"].json.product_codes}}\"}}",
        "options": {}
      },
      "name": "Get the products",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        5340,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "\nlet action = \"\";\nlet products = $node[\"Get po_details\"].json[\"data\"][\"product_details\"];\n\nlet existing_products = items[0].json.data\nlet resultFilter = \n   products.filter(products=>\n     !existing_products.some(\n      data=> data.product_code === products[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"] \n    )\n  );\n\n\nlet products_to_create = []\nitems[0].json.length= resultFilter .length;\nif(resultFilter.length>0){\n   action=\"post the products\";\n   resultFilter.forEach(function(obj,index){\n     products_to_create[index]={};\n     products_to_create[index].product_name = obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_name\"]\n     products_to_create[index].product_code = obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"]\n     products_to_create[index].hsn = obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"hsn\"]\n     products_to_create[index].description = obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"description\"]\n   })\n\n}else action = \"no products to post\";\n\nitems[0].json.postProducts=products_to_create ;\nitems[0].json.products=products;\n\n\n\nitems[0].json.action = action;\n\n\n\nreturn items;"
      },
      "name": "Function to create products",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        5600,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"action\"]}}",
              "value2": "post the products"
            }
          ]
        }
      },
      "name": "Checking condition whether to post the products ",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        5840,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.vpanel.shakedeal.com/items/sdv_products",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersJson": "={{$node[\"Function to create products\"].json[\"postProducts\"]}}"
      },
      "name": "post product details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        6100,
        120
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {},
      "name": "NoOp3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        6100,
        480
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.vpanel.shakedeal.com/items/sdv_vendor_pos",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "po_file",
              "value": "={{$node[\"Upload PO in vpanel\"].json[\"data\"][\"id\"]}}"
            },
            {
              "name": "po_number",
              "value": "={{$node[\"create po\"].json[\"purchaseorder\"][\"purchaseorder_number\"]}}"
            },
            {
              "name": "po_value",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"po_value\"]}}"
            },
            {
              "name": "po_date",
              "value": "={{$node[\"Get po_details\"].json[\"data\"][\"po_date\"]}}"
            },
            {
              "name": "vendor",
              "value": "={{$node[\"Check for vendor in vpanel\"].json.data.length>0 &&Array.isArray($node[\"Check for vendor in vpanel\"].json.data)?$node[\"Check for vendor in vpanel\"].json.data[0].id:$node[\"Check for vendor in vpanel\"].json.data.length>0 && !Array.isArray($node[\"Check for vendor in vpanel\"].json.data )?$node[\"Check for vendor in vpanel\"].json.data.id:Array.isArray($node[\"Create vendor details\"].json.data)?$node[\"Create vendor details\"].json.data[0].id:$node[\"Create vendor details\"].json.data.id}}"
            }
          ]
        }
      },
      "name": "Create po in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        6540,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.vpanel.shakedeal.com/items/sdv_vendor_pos_sdv_products",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Function to map po and product\"].json.po_to_products}}"
      },
      "name": "Map po and products",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        7040,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let po_to_products = [];\nlet concat_products = $node[\"Function to create products\"].json.action == \"post the products\"?[...$node[\"post product details\"].json.data,...$node[\"Get the products\"].json.data]:$node[\"Get the products\"].json.data;\nlet product_details = $node[\"Get po_details\"].json[\"data\"][\"product_details\"]\nproduct_details.forEach(function(obj,index){\n  let product = concat_products.filter(prod=>prod.product_code == obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"]);\n  po_to_products[index]={};\n  po_to_products[index].sdv_products_id = product[0].id;\n  po_to_products[index].sdv_vendor_pos_id = Array.isArray($node[\"Create po in vpanel\"].json.data)?$node[\"Create po in vpanel\"].json.data[0].id:$node[\"Create po in vpanel\"].json.data.id;\n  po_to_products[index].req_qty = obj.req_qty\n  po_to_products[index].rate = obj.rate\n  po_to_products[index].sub_total = obj.sub_total\n  po_to_products[index].tax_value = obj.tax_value\n  po_to_products[index].product_total = obj.product_total\n})\n\n\nitems[0].json.po_to_products= po_to_products;\nitems[0].json.concat_products= concat_products;\nitems[0].json.product_details= product_details;\nreturn items;"
      },
      "name": "Function to map po and product",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        6780,
        320
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://sdqa.mozart.shakedeal.com/items/sd_mozart_vendor_invoice_details",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "vendor_po_number",
              "value": "={{$node[\"Update the vendor po_num\"].json[\"data\"][\"id\"]}}"
            }
          ]
        }
      },
      "name": "Create vendor invoice details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3540,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [
    {
      "id": "5",
      "name": "Mozart",
      "createdAt": "2022-05-30T07:16:52.136Z",
      "updatedAt": "2022-05-30T07:16:52.136Z"
    }
  ],
  "updatedAt": "2022-06-07T06:04:14.782Z"
}