{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "access token generated by refresh token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "access token generated by refresh token": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Customer": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Check for Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to create contact": {
      "main": [
        [
          {
            "node": "create contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Function to create contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function for item objects": {
      "main": [
        [
          {
            "node": "Check for item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get taxes": {
      "main": [
        [
          {
            "node": "Function for item objects",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create contact": {
      "main": [
        [
          {
            "node": "Get taxes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp": {
      "main": [
        [
          {
            "node": "Get taxes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-06-01T05:58:55.158Z",
  "id": "125",
  "name": "Create purchase order",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -60,
        300
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "create_po",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        160,
        300
      ],
      "webhookId": "e527030c-1bfc-4f07-8b57-24aa8cae6d0d"
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://sdqa.mozart.shakedeal.com/items/sd_mozart_vendor_po_details/{{$node[\"Webhook\"].json[\"body\"][\"keys\"][0]}}?fields=vendor_po_number,id,po_date,po_value,vendor.*,product_details.*,product_details.sd_mozart_vendor_product_mapping_id.*,product_details.sd_mozart_vendor_product_mapping_id.product.*",
        "options": {
          "ignoreResponseCode": true
        }
      },
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        620,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://accounts.zoho.com/oauth/v2/token\n",
        "options": {},
        "headerParametersUi": {
          "parameter": []
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "client_id",
              "value": "=1000.WBSVSVM7UXFERT32STIOQLG3CFWOKP"
            },
            {
              "name": "grant_type",
              "value": "refresh_token"
            },
            {
              "name": "redirect_uri",
              "value": "http://localhost:5678/webhook-test/sd_invoice"
            },
            {
              "name": "client_secret",
              "value": "=71afde1862948a64f91e451cdfe7f8c78250d32f7e"
            },
            {
              "name": "refresh_token",
              "value": "=1000.5ff4be7b6c923c0d40d2b96565226359.bd12d19eea668016c7e40b698bb6a0a0"
            }
          ]
        }
      },
      "name": "access token generated by refresh token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        400,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [],
          "number": [
            {
              "value1": "={{$node[\"Check for Customer\"].json[\"contacts\"].length}}",
              "operation": "equal"
            }
          ]
        }
      },
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1000,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/vendors/?organization_id=685685414&contact_name={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_company\"]}}&gst_no={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"gstin\"]}}",
        "allowUnauthorizedCerts": true,
        "options": {}
      },
      "name": "Check for Customer",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        840,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://books.zoho.com/api/v3/vendors/?organization_id=685685414",
        "options": {
          "bodyContentType": "json"
        },
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "billing_address",
              "value": "={{$node[\"Function to create contact\"].json[\"billing_address\"]}}"
            },
            {
              "name": "shipping_address",
              "value": "={{$node[\"Function to create contact\"].json[\"billing_address\"]}}"
            },
            {
              "name": "contact_name",
              "value": "={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_company\"]}}"
            },
            {
              "name": "first_name",
              "value": "={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_name\"]}}"
            },
            {
              "name": "email",
              "value": "={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_email\"]}}"
            },
            {
              "name": "mobile",
              "value": "={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_phone\"]}}"
            },
            {
              "name": "place_of_contact",
              "value": "=KA"
            },
            {
              "name": "contact_type",
              "value": "={{$node[\"Function to create contact\"].json.contact_type}}"
            },
            {
              "name": "gst_no",
              "value": "={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"gstin\"]}}"
            },
            {
              "name": "gst_treatment",
              "value": "={{$node[\"Function to create contact\"].json.gst_treatment}}"
            },
            {
              "name": "company_name",
              "value": "={{$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_company\"]}}"
            }
          ]
        }
      },
      "name": "create contact",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1340,
        40
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let contact_name=$node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_company\"]\nlet tax_treatment = \"\";\nlet gst_treatment = \"\";\nlet contact_type = \"vendor\"; \nlet JSONString={\n  \"contact_name\":contact_name\n }\n if($node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"is_sez\"] == \"1\"){\n   tax_treatment = \"business_sez\";\n   gst_treatment = \"business_sez\";\n }else if($node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"gstin\"] && $node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"is_sez\"] == \"0\"){\n   tax_treatment = \"business_gst\";\n   gst_treatment = \"business_gst\";\n }else {\n   tax_treatment = \"consumer\";\n   gst_treatment = \"consumer\";\n }\n let billing_address= {\n    \"address\": $node[\"HTTP Request\"].json[\"data\"][\"vendor\"][\"vendor_address\"]\n}\n items[0].json.contact_type = contact_type;\n items[0].json.tax_treatment = tax_treatment;\n items[0].json.gst_treatment = gst_treatment;\n items[0].json.billing_address = billing_address;\n items[0].json.JSONString=JSONString;\nreturn items;"
      },
      "name": "Function to create contact",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1060,
        40
      ]
    },
    {
      "parameters": {},
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1220,
        440
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/items?organization_id=685685414",
        "allowUnauthorizedCerts": true,
        "options": {},
        "headerParametersUi": {
          "parameter": []
        },
        "queryParametersUi": {
          "parameter": [
            {
              "name": "sku",
              "value": "={{$node[\"Function for item objects\"].json[\"0\"][\"sku\"]}}"
            }
          ]
        }
      },
      "name": "Check for item",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1980,
        240
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "\nlet pro_items=$node[\"HTTP Request\"].json[\"data\"][\"product_details\"]\nlet returnItems =[]\npro_items.forEach(function(obj,index){  \n    returnItems.push({\n    json: [{\n       name:obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_name\"],\n       rate:obj[\"rate\"],\n       sku:obj[\"sd_mozart_vendor_product_mapping_id\"][\"product\"][\"product_code\"],\n       item_type :obj[\"item_type\"] \n    }]\n  });\n  \n})\n\nreturn returnItems;"
      },
      "name": "Function for item objects",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1820,
        240
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://books.zoho.com/api/v3/settings/taxes?organization_id=685685414",
        "options": {}
      },
      "name": "Get taxes",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1620,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "29",
          "name": "zoho books creds"
        }
      }
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [
    {
      "id": "5",
      "name": "Mozart",
      "createdAt": "2022-05-30T07:16:52.136Z",
      "updatedAt": "2022-05-30T07:16:52.136Z"
    }
  ],
  "updatedAt": "2022-06-01T14:25:47.783Z"
}