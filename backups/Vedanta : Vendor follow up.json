{
  "active": false,
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Get url and token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get url and token": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-12-15T09:17:54.370Z",
  "id": "250",
  "name": "Vedanta : Vendor follow up",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "requestMethod": "POST",
        "url": "=https://qan8n.shakedeal.com/webhook/get-url",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "client",
              "value": "=vedanta"
            },
            {
              "name": "env",
              "value": "=qa"
            }
          ]
        }
      },
      "name": "Get url and token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        520,
        300
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select v.id as email,vpo.id as SDPO,i.id,vpo.po_date,oi.quantity as order_quantity,i.product,s.shipment_status,p.product_name,i.requested_qty,i.ordered_qty,s.id as sid,s.shipment_status,oi.sdm_po_items_id,vpo.po_status,delivery_date,(delivery_date -now()) as due from sdm_po_items i\njoin sdm_vendor_pos vpo on vpo.id = i.vendor_po\nand delivery_date < NOW() + INTERVAL '1 Month'\nand vpo.po_status not in('complete','canclelled','payment_pending')\nleft join sdm_shipments s on s.vendor_po_num = vpo.id \nleft join sdm_orders o on o.shipment = s.id\nleft join sdm_order_items oi on oi.sdm_orders_id = o.id \nand oi.sdm_po_items_id = i.id\njoin sdm_vendors v on v.id = vpo.vendor\njoin sdm_products p on p.id = i.product\nwhere shipment_status in ('open','awaiting_irn','awaiting_asn') or shipment_status is null",
        "additionalFields": {}
      },
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        740,
        300
      ],
      "credentials": {
        "postgres": {
          "id": "78",
          "name": "Vedanta postgres qa"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let followUpData =[]\nitems.forEach((item,index)=>{\n    let ordered_qty = item.json.ordered_qty?item.json.ordered_qty:0\n    followUpData[index]={};\n    followUpData[index].qty = item.json.shipment_status?(item.json.requested_qty - ordered_qty) + item.json.order_quantity:item.json.requested_qty\n})\n\nreturn [{\n     json: {\n         followUpData: followUpData,\n    }\n}];"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1000,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "value": "="
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1300,
        240
      ]
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [],
  "updatedAt": "2023-01-09T12:16:35.718Z"
}