{
  "active": true,
  "connections": {
    "Check for message ID": {
      "main": [
        [
          {
            "node": "Check Message ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Data": {
      "main": [
        [
          {
            "node": "Update SES Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update SES Log": {
      "main": [
        [
          {
            "node": "Insert SES Log Details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Message ID": {
      "main": [
        [
          {
            "node": "Update Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Distinguish Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Message ID1": {
      "main": [
        [
          {
            "node": "Check for message ID",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Distinguish Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Send the reply to SD store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Distinguish Reply": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert SES Log Details": {
      "main": [
        [
          {
            "node": "Distinguish Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function": {
      "main": [
        [
          {
            "node": "Check Message ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-06-29T09:41:26.190Z",
  "id": "337",
  "name": "AiSensy Callback",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -180,
        280
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "aisensy-callback",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        20,
        280
      ],
      "webhookId": "41b9e333-1821-44a0-a953-818d27d6f38e"
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://zeusqa.shakedeal.com/items/sd_delivery_logs?filter={\"_and\": [{\"message_id\": {\"_eq\":\"{{$node[\"Function\"].json[\"message_id\"]}}\"}},{\"event_type\":{\"_eq\":\"WhatsApp\"}}]}",
        "options": {}
      },
      "name": "Check for message ID",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        540,
        280
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "81",
          "name": "SES Auth"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let request = $node[\"Webhook\"].json.body\n\nlet keys = [];\nlet req_body = {};\n\nlet response = $node[\"Check for message ID\"].json.data\n\nresponse.forEach(function(obj,index){\n    keys.push(obj.log_id)\n})\n\nlet whatsapp_status = '';\nlet log_status = '';\nif(request.data.message.status == 'READ'){\n    whatsapp_status = 'Seen';\n}else if(request.data.message.status == 'DELIVERED'){\n    whatsapp_status = 'Delivered';\n}else if(request.data.message.status == 'FAILED'){\n    whatsapp_status = 'Failed';\n}else{\n    whatsapp_status = 'Send';\n}\n\nlet current_status = $node[\"Check for message ID\"].json.data[0].status;\n//Check log status. If status already set to seen, no need to update the status\nif(current_status == 'Seen'){\n    log_status = 'Seen';\n}else if(current_status == 'Delivered'){\n    if(whatsapp_status == 'Seen'){\n        log_status = 'Seen';\n    }else{\n        log_status = current_status;\n    }\n}else{\n    log_status = whatsapp_status;\n}\n\nlet data = {\n    \"status\" : log_status\n}\n\nreq_body.keys = keys;\nreq_body.data = data;\n\nitems[0].json.keys = keys;\nitems[0].json.status = log_status;\nitems[0].json.req_body = req_body;\nreturn items;"
      },
      "name": "Update Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        960,
        260
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "=https://zeusqa.shakedeal.com/items/sd_delivery_logs",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$node[\"Update Data\"].json[\"req_body\"]}}"
      },
      "name": "Update SES Log",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1180,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "81",
          "name": "SES Auth"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "=https://zeusqa.shakedeal.com/items/sd_delivery_log_details",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "sd_delivery_log_id",
              "value": "={{$node[\"Update SES Log\"].json[\"data\"][0][\"log_id\"]}}"
            },
            {
              "name": "status",
              "value": "={{$node[\"Update Data\"].json[\"status\"]}}"
            },
            {
              "name": "message",
              "value": "={{$node[\"Webhook\"].json[\"body\"]}}"
            }
          ]
        }
      },
      "name": "Insert SES Log Details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1360,
        260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "81",
          "name": "SES Auth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$node[\"Check for message ID\"].json[\"data\"].length}}",
              "operation": "larger",
              "value2": "={{0}}"
            }
          ]
        }
      },
      "name": "Check Message ID",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        740,
        280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Function\"].json[\"message_id\"]}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Check Message ID1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        340,
        280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{[\"yes\",\"no\",\"stop\",\"start\"].includes($node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"message_content\"][\"text\"].toLowerCase())?true:false}}",
              "value2": true
            }
          ]
        }
      },
      "name": "Distinguish Reply",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        660,
        540
      ],
      "notes": "SDStore : True\nShakePe : False"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "hash",
              "value": "=wfs%#hash"
            },
            {
              "name": "sdStore_url",
              "value": "=https://sdqa.shakedeal.com/index.php?dispatch=wfs_update.whatsapp_call_back"
            }
          ]
        },
        "options": {}
      },
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        940,
        520
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$node[\"Globals\"].json[\"sdStore_url\"]}}",
        "responseFormat": "string",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "body",
              "value": "={{$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"message_content\"][\"text\"]}}"
            },
            {
              "name": "from",
              "value": "={{$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"phone_number\"]}}"
            },
            {
              "name": "reply_to",
              "value": "={{$node[\"Function\"].json[\"message_id\"]}}"
            },
            {
              "name": "text",
              "value": "={{$node[\"Webhook\"].json[\"body\"][\"data\"][\"message\"][\"message_content\"][\"text\"]}}"
            },
            {
              "name": "hash",
              "value": "={{$node[\"Globals\"].json.hash}}"
            }
          ]
        }
      },
      "name": "Send the reply to SD store",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1140,
        520
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "functionCode": "let response = $node[\"Webhook\"].json.body;\n\nlet message_id = '';\n\nif(response.data.message.submitted_message_id){\n  message_id = response.data.message.submitted_message_id;\n}else if(response.data.message.context && response.data.message.context.submitted_message_id){\n  message_id = response.data.message.context.submitted_message_id;\n}\n\n\nitems[0].json.message_id = message_id;\n\nreturn items;\n\n"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        180,
        280
      ]
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [],
  "updatedAt": "2023-07-03T12:31:20.176Z"
}