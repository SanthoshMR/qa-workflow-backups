{
  "active": true,
  "connections": {
    "Receive the order_status": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update the order_status with that order_id": {
      "main": [
        [
          {
            "node": "POI Informed About the Orderstatus by WFS.",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get po_number": {
      "main": [
        [
          {
            "node": "Get POI Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get POI Email": {
      "main": [
        [
          {
            "node": "Constructing email content based on order_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get po_number",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Constructing email content based on order_status": {
      "main": [
        [
          {
            "node": "Update the order_status with that order_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2021-02-25T07:56:48.754Z",
  "id": "34",
  "name": "Balco : Order Status Updated Workflow From DMS",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        90,
        100
      ]
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "update_status_in_sds",
        "responseMode": "lastNode",
        "responseData": "allEntries",
        "options": {
          "rawBody": false
        }
      },
      "name": "Receive the order_status",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        290,
        260
      ],
      "webhookId": "b92090c1-974f-45f7-8d77-fe21124243d0",
      "credentials": {
        "httpBasicAuth": "Balco_basic_auth"
      }
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "requestMethod": "POST",
        "url": "https://sdqa.shakedeal.com/index.php?dispatch=shipway_tracking_update.routing_order_status_update",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "order_id",
              "value": "={{$node[\"Constructing email content based on order_status\"].json[\"remove_prefix\"]}}"
            },
            {
              "name": "order_status",
              "value": "={{$node[\"Constructing email content based on order_status\"].json[\"orderStatus\"]}}"
            },
            {
              "name": "hash",
              "value": "JGhAa2VAbEAxMjNT"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": []
        },
        "queryParametersUi": {
          "parameter": []
        }
      },
      "name": "Update the order_status with that order_id",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1340,
        260
      ],
      "credentials": {
        "httpBasicAuth": "Balco_basic_auth"
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Globals\"].json[\"dms_url\"]}}/items/sd_mozart_orders/{{$node[\"Globals\"].json[\"order_id\"]}}?fields=po_num.po_num,order_id",
        "allowUnauthorizedCerts": true,
        "options": {}
      },
      "name": "Get po_number",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        710,
        260
      ],
      "credentials": {
        "httpHeaderAuth": "Balcoqa-Dms-Token"
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Globals\"].json[\"dms_url\"]}}/items/sd_mozart_po_details?filter={\"po_num\":{\"_eq\":\"{{$node[\"Get po_number\"].json[\"data\"][\"po_num\"][\"po_num\"]}}\"}}&fields=issuer_name.user.email",
        "allowUnauthorizedCerts": true,
        "options": {}
      },
      "name": "Get POI Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        920,
        260
      ],
      "credentials": {
        "httpHeaderAuth": "Balcoqa-Dms-Token"
      }
    },
    {
      "parameters": {
        "fromEmail": "handyalasairam9177@gmail.com",
        "toEmail": "sairam.reddy@shakedeal.com",
        "subject": "={{$node[\"Constructing email content based on order_status\"].json[\"subject\"]}}",
        "html": "=<!DoCtYPe html><html lang=\"en\"><head><style id=\"stndzstyle\"></style>\n <meta http-equiv=\"Content-Type\" content=\"text\n/html; charset=UTF-8\">\n <meta name=\"viewport\" content=\"width=device-width,\ninitial-scale=1, shrink-to-fit=no\">\n <meta name=\"description\" content=\"\">\n <meta name=\"author\" content=\"Mark Otto, Jacob\nThornton, and Bootstrap contributors\">\n <meta name=\"generator\" content=\"\nAcelleSystemLayouts\">\n\n <!-- Bootstrap core CSS -->\n <link href=\"https://marketing.shakedeal.com/assets\n/templates/60584da7bdf65/css/bootstrap.min.css\" rel=\"\nstylesheet\">\n <script id=\"spHTMLFormElementPrototypeScript\">\n(function()\n {\n try\n {\n var sp_old_HTMLFormElementPrototype_submit = \nHTMLFormElement.prototype.submit;\n HTMLFormElement.prototype.submit = function\n(AEvent)\n {\n try\n {\n var spEvent = document.createEvent('Event');\n spEvent.initEvent('sp_submit', true, true);\n this.dispatchEvent(spEvent);\n }\n catch(ErrorMessage)\n {\n console.error('spFormElementPrototype()\nError sending \"sp_submit\" event from HTMLFormElement.\nprototype.submit: ' + ErrorMessage);\n }\n sp_old_HTMLFormElementPrototype_submit.apply\n(this);\n };\n }\n catch(ErrorMessage)\n {\n console.error('spFormElementPrototype() Error\nattaching to HTMLFormElement.prototype.submit: ' +\nErrorMessage);\n }\n try\n {\n if (typeof __doPostBack == 'function')\n {\n var sp_old__doPostBack = __doPostBack;\n __doPostBack = function(eventTarget,\neventArgument)\n {\n try\n {\n var spEvent = document.createEvent\n('Event');\n spEvent.initEvent('sp_submit', true, true);\n window.dispatchEvent(spEvent);\n }\n catch(ErrorMessage)\n {\n console.error('spFormElementPrototype()\nError sending \"sp_submit\" event from __doPostBack(): '\n+ ErrorMessage);\n }\n sp_old__doPostBack(eventTarget,\neventArgument);\n };\n }\n }\n catch(ErrorMessage)\n {\n console.error('spFormElementPrototype() Error\nattaching to __doPostBack(): ' + ErrorMessage);\n }\n })();</script><link href=\"https://fonts.googleapis.\ncom/icon?family=Material+Icons\" rel=\"stylesheet\"><link\nhref=\"https://fonts.googleapis.com/icon?\nfamily=Material+Icons+Outlined\" rel=\"stylesheet\"></head>\n\n <body data-new-gr-c-s-check-loaded=\"14.990.0\" datagr-ext-installed=\"\">\n<main role=\"main\">\n<div class=\"py-5 bg-light\">\n<div class=\"container\">\n<h1 class=\"my-4 display-4 text-center\">{{$node[\"Constructing email content based on order_status\"].json[\"heading\"]}}</h1>\n<p class=\"lead text-center\">{{$node[\"Constructing email content based on order_status\"].json[\"bodyContent\"]}}</p>\n<div><img class=\"my-2\" src=\"\" width=\"100%\" /></div>\n</div>\n</div>\n</main><footer class=\"text-muted py-5\">\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-8\">\n<p class=\"mb-1\">Copyright &copy; OpCommerce Online PVT\nLTD, All rights reserved.</p>\n<p class=\"mb-0\">Please email us on <a href=\"\nsupport@shakedeal.com\">support@shakedeal.com</a> in\ncase of any queries.\n</div>\n<div class=\"col-md-4\">\n<p class=\"float-right\"><a href=\"#\">Back to top</a></p>\n</div>\n</div>\n</div>\n</footer>\n</body></html>",
        "options": {}
      },
      "name": "POI Informed About the Orderstatus by WFS.",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1580,
        260
      ],
      "credentials": {
        "smtp": "smtp(sai)creds"
      },
      "disabled": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "order_id",
              "value": "={{$node[\"Receive the order_status\"].json[\"body\"][\"keys\"][0]}}"
            },
            {
              "name": "order_status",
              "value": "={{$node[\"Receive the order_status\"].json[\"body\"][\"payload\"][\"order_status\"]}}"
            },
            {
              "name": "dms_url",
              "value": "={{ $node[\"Receive the order_status\"].json[\"headers\"][\"x-sd-env\"] === \"prod\" ? \"https://balco.mozart.shakedeal.com\" : \"https://balcoqa.mozart.shakedeal.com\" }}"
            },
            {
              "name": "order_prefix",
              "value": "=OD"
            }
          ]
        },
        "options": {}
      },
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        500,
        260
      ]
    },
    {
      "parameters": {
        "functionCode": "let orderNumber =  $node[\"Get po_number\"].json.data[\"order_id\"]\n\nlet po_number =  $node[\"Get po_number\"].json.data[\"po_num\"][\"po_num\"]\nlet orderStatus= $node[\"Globals\"].json[\"order_status\"]\n\nitems[0].json.orderStatus = orderStatus\nif(orderStatus ===\"processed\"){\n   items[0].json.subject = `Order ${orderNumber} for Purchase Order ${po_number} has been Processed`\n   items[0].json.heading = `Order ${orderNumber} against PO ${po_number} has processed`\n  items[0].json.bodyContent = `Order ${orderNumber} against PO ${po_number} \nhas been processed and will shortly shipped to itâ€™s destination. \nWe will keep you updated with the status of your shipment.`\n}\nif(orderStatus===\"intransit\"){\n   items[0].json.subject = `Order ${orderNumber} for Purchase Order ${po_number} \nis In Transit`\n   items[0].json.heading = `Order ${orderNumber} against PO ${po_number} has \nbeen Dispatched`\n   items[0].json.bodyContent = `Order  ${orderNumber} against PO ${po_number} \nhas been Shipped and will arrive at itâ€™s destination soon.`\n}\n\nif(orderStatus === \"complete\"){\n    items[0].json.subject = `Order ${orderNumber}  for Purchase Order ${po_number} \nhas reached itâ€™s destination`\n    items[0].json.heading = `: Order ${orderNumber} against PO ${po_number} has \nreached itâ€™s Destination.`\n     items[0].json.bodyContent = `: Order ${orderNumber} against PO ${po_number} \nhas been reached itâ€™s destination and is now complete.`\n\n}\n\nlet order_prefix = $node[\"Globals\"].json[\"order_prefix\"]\n\nlet remove_prefix = orderNumber.replace(order_prefix,\"\");\n\n\nitems[0].json.remove_prefix =remove_prefix \n\nitems[0].json.po_number = po_number \nitems[0].json.orderNumber = orderNumber;\nitems[0].json.orderStatus = orderStatus\nreturn items;\n"
      },
      "name": "Constructing email content based on order_status",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1110,
        260
      ]
    }
  ],
  "settings": {},
  "staticData": null,
  "updatedAt": "2022-04-08T12:44:57.385Z"
}