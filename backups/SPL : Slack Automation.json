{
  "active": true,
  "connections": {
    "Cron": {
      "main": [
        [
          {
            "node": "Read teams from excel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get tommorow date": {
      "main": [
        [
          {
            "node": "Check for action matched",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get teams and channel ids": {
      "main": [
        [
          {
            "node": "Get background image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get background image": {
      "main": [
        [
          {
            "node": "Get team-a image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get team-a image": {
      "main": [
        [
          {
            "node": "Set team-a over background",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get team-b image": {
      "main": [
        [
          {
            "node": "Set team-b over backround",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set team-a over background": {
      "main": [
        [
          {
            "node": "Get team-b image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set team-b over backround": {
      "main": [
        [
          {
            "node": "Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get formatted date": {
      "main": [
        [
          {
            "node": "Get tommorow date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for action matched": {
      "main": [
        [
          {
            "node": "Get teams and channel ids",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read teams from excel": {
      "main": [
        [
          {
            "node": "Get formatted date",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-05-23T11:58:34.731Z",
  "id": "122",
  "name": "SPL : Slack Automation",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -640,
        20
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "binaryData": true,
        "binaryPropertyName": "=data",
        "options": {
          "channelIds": "={{$node[\"Get teams and channel ids\"].json[\"channels\"]}}",
          "initialComment": "={{$node[\"Get teams and channel ids\"].json[\"slack_text\"]}} Match",
          "title": "SPL"
        }
      },
      "name": "Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        1560,
        100
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "40",
          "name": "SlackOAuth"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 18
            },
            {
              "hour": 10
            },
            {
              "hour": 16,
              "minute": 30
            }
          ]
        }
      },
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -660,
        320
      ]
    },
    {
      "parameters": {
        "functionCode": "const tomorrow = new Date();\nconst today = new Date().toISOString().slice(0, 10);\nlet dynamic_date = \"\";\nlet action = \"\"\nlet time = new Date()\nlet slack_text = \"\";\n\ntime.setHours(time.getHours() + 5);\ntime.setMinutes(time.getMinutes() + 30);\nlet time_string = time.getHours() + \":\" + time.getMinutes() + \":\" + time.getSeconds()\nlet secs = time_string.split(':').reduce((acc,time) => (60 * acc) + +time);\n\n\n// add 1 day to today\ntomorrow.setDate(new Date().getDate() + 1)\nif(secs>=61200  && secs<=72000  ){\n    dynamic_date = tomorrow.toJSON().slice(0,10);\n    slack_text = \"Tomorrow's\"\n}else if(secs >57600 && secs <= 60600 ) {\n  dynamic_date=today\n  slack_text = \"Today's Reminder\"\n}else {\n  dynamic_date=today\n  slack_text = \"Today's\"\n} \n\nfor (item of items) {\n  if(item.json.formatted_date == dynamic_date ){\n    action = \"matched\"\n  }else action = \"not_matched\"\n  item.json.slack_text = slack_text\n  item.json.dynamic_date = dynamic_date\n  item.json.action = action\n  item.json.tomorrowDate = tomorrow;\n}\n\nreturn items;"
      },
      "name": "Get tommorow date",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -60,
        320
      ]
    },
    {
      "parameters": {},
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        340,
        480
      ]
    },
    {
      "parameters": {
        "functionCode": "// Code here will run only once, no matter how many input items there are.\n// More info and help: https://docs.n8n.io/nodes/n8n-nodes-base.function\n// Tip: You can use luxon for dates and $jmespath for querying JSON structures\n\n// Loop over inputs and add a new field called 'myNewField' to the JSON of each one\nlet ids = [\"GCDQW3UM6\"]\n\nitems[0].json.channels = ids;\nreturn items;"
      },
      "name": "Get teams and channel ids",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        340,
        100
      ]
    },
    {
      "parameters": {
        "url": "=https://sdqa.shakedeal.com/images/shake_deal/spl/back.jpg",
        "responseFormat": "file",
        "options": {}
      },
      "name": "Get background image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        540,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://sdqa.shakedeal.com/images/shake_deal/spl/{{$node[\"Get teams and channel ids\"].json[\"Team-A\"].toLowerCase()}}.png",
        "responseFormat": "file",
        "dataPropertyName": "data2",
        "options": {}
      },
      "name": "Get team-a image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        740,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://sdqa.shakedeal.com/images/shake_deal/spl/{{$node[\"Get teams and channel ids\"].json[\"Team-B\"].toLowerCase()}}.png",
        "responseFormat": "file",
        "dataPropertyName": "data2",
        "options": {}
      },
      "name": "Get team-b image",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        1160,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "composite",
        "dataPropertyNameComposite": "data2",
        "positionY": 1250,
        "options": {}
      },
      "name": "Set team-a over background",
      "type": "n8n-nodes-base.editImage",
      "typeVersion": 1,
      "position": [
        960,
        100
      ]
    },
    {
      "parameters": {
        "operation": "composite",
        "dataPropertyNameComposite": "data2",
        "positionX": 1350,
        "positionY": 1250,
        "options": {}
      },
      "name": "Set team-b over backround",
      "type": "n8n-nodes-base.editImage",
      "position": [
        1360,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "formatted_date",
              "value": "={{new Date(Math.round($node[\"Read teams from excel\"].json[\"Date\"] - 25569) * 86400 * 1000).toISOString().slice(0, 10)}}"
            },
            {
              "name": "time",
              "value": "={{new Date().toLocaleTimeString('en-US')}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Get formatted date",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -260,
        320
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$node[\"Get tommorow date\"].json[\"action\"]}}",
              "value2": "=matched"
            }
          ]
        }
      },
      "name": "Check for action matched",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        140,
        320
      ]
    },
    {
      "parameters": {
        "resource": "worksheet",
        "operation": "getContent",
        "workbook": "A6E890F58473778D!1961",
        "worksheet": "{2882936D-4CE3-4B67-9312-9BD3872DD6A9}",
        "range": "A1:C29"
      },
      "name": "Read teams from excel",
      "type": "n8n-nodes-base.microsoftExcel",
      "typeVersion": 1,
      "position": [
        -460,
        320
      ],
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "microsoftExcelOAuth2Api": {
          "id": "34",
          "name": "Microsoft excel creds"
        }
      }
    }
  ],
  "settings": {
    "timezone": "Asia/Calcutta",
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [],
  "updatedAt": "2022-05-30T14:12:21.835Z"
}