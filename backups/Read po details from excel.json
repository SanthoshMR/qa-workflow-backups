{
  "active": false,
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Get po details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get po details": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-08-12T19:11:21.123Z",
  "id": "162",
  "name": "Read po details from excel",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "let product_name = [];\nlet product_code=[];\nlet product_quantity=[];\nlet material_description=[];\nlet vendor_name=[];\nlet vendor_phone=[];\nlet vendor_companyName=[];\nlet vendor_email=[];\nlet vendor_adress=[];\nlet product_deliverDate=[];\nlet productvalueWithTax=[];\nlet hsn_code = [];\nlet uom = [];\nlet plant = [];\nlet taxes = [];\nlet taxValues = [];\nlet rates = [];\nlet productSubTotal = [];\nlet productDetails=[];\nlet po_number = \"\";\nlet po_date = \"\";\nlet po_value = 0;\nlet findParameters = [\"PO Number\",\"PO Date\"];\nlet aribaVendorId = [];\nlet taxPercentages = [];\nlet searchParameters = {\n  \"po_number\":[\"PO Number\"],\n\n}\nlet po_type =  \"\";\nlet po_details = $node[\"Get po details\"].json.data.formulas;\npo_number = po_details[0][0].toString();\npo_date = po_details[0][1].split(\".\").reverse().join(\"-\");\npo_value = po_details[0][17];\npo_type = po_details[0][19];\npo_details.forEach(function(pod,index){\n  product_code.push(pod[3]);\n  plant.push(pod[4]);\n  uom.push(pod[5]);\n  product_quantity.push(pod[6].toString());\n  rates.push(pod[7]);\n  productSubTotal.push(parseFloat(pod[8]));\n  product_name.push(pod[9]);\n  vendor_name.push(pod[10]);\n  vendor_email.push(pod[11]);\n  vendor_phone.push(pod[12].toString());\n  aribaVendorId.push(pod[14]);\n  hsn_code.push(pod[16]);\n  product_deliverDate.push(pod[18].split(\".\").reverse().join(\"-\"));\n  taxPercentages.push(pod[19]);\n  taxValues.push(pod[20]);\n\n})\nproduct_code.forEach(function(item,index){\n  productDetails[index] = {};\n  productDetails[index].product_index = index;\n  productDetails[index].product_name =product_name[index] ;\n  productDetails[index].product_code=product_code[index];\n  productDetails[index].uom = uom[index];  \n  productDetails[index].hsn = hsn_code[index];\n  productDetails[index].product_quantity=product_quantity[index];\n  let productTotal = parseFloat(productSubTotal[index])+parseFloat(taxValues[index])\n  productvalueWithTax.push(productTotal)\n  productDetails[index].productvalueWithTax=productTotal;\n  productDetails[index].rate = rates[index];\n  productDetails[index].tax = parseFloat(taxPercentages[index].match(/[\\d\\.]+/));\n  //productDetails[index].description=material_description[index];\n productDetails[index].po_deliver_date = product_deliverDate[index].split(\".\").reverse().join(\"-\");\n  productDetails[index].plant = plant[index];\n  productDetails[index].isMapped = false;         \n})\n\nlet vendorDetails=[];\nvendor_name.forEach(function(item,index){\n  vendorDetails[index] = {};\n  vendorDetails[index].vendor_name=vendor_name[index];\n  vendorDetails[index].vendor_phone=vendor_phone[index];\n  vendorDetails[index].vendor_company=vendor_companyName[index];\n  vendorDetails[index].vendor_email=vendor_email[index];\n  vendorDetails[index].vendor_address=vendor_adress[index];\n  vendorDetails[index].ariba_vendor_id = aribaVendorId[index];\n})\nlet prodven=[];\nif(vendor_name.length>1){\n      productDetails.forEach(function(product,index){\n        prodven[index]={};\n        prodven[index].product_index = product[\"product_index\"];\n        prodven[index].productCode = product[\"product_code\"];\n        prodven[index].email = vendor_email[index];\n        prodven[index].quantity= product[\"product_quantity\"];\n        prodven[index].product_deliverDate = product[\"po_deliver_date\"];\n        prodven[index].product_price = product[\"productvalueWithTax\"];\n      })\n}\nif(vendor_name.length>0){\n   items[0].json.order_type = \"routing\";\n\n}else items[0].json.order_type = \"rfq\";\n\nlet max =product_deliverDate[0];\n\nproduct_deliverDate.forEach(function(value,index){\n       max = new Date(value) > new Date(max)? value: max;\n      \n\n\n})\n\nitems[0].json.po_type = po_type;\nitems[0].json.max_date = max.split(\".\").reverse().join(\"-\"); \n\nitems[0].json.product_deliverDate = product_deliverDate;\nitems[0].json.vendor_name = vendor_name;\nitems[0].json.vendor_email = vendor_email;\nitems[0].json.aribaVendorId = aribaVendorId;\nitems[0].json.products = productDetails;\nitems[0].json.vendors = vendorDetails;\nitems[0].json.prodven = prodven;\nitems[0].json.taxValues = taxValues;\nitems[0].json.productSubTotal = productSubTotal;\nitems[0].json.product_code = product_code;\nitems[0].json.product_name = product_name;\nitems[0].json.plant = plant;\nitems[0].json.uom = uom;\nitems[0].json.product_quantity = product_quantity;\nitems[0].json.rates = rates;\nitems[0].json.po_date = po_date; \nitems[0].json.po_number = po_number;\nitems[0].json.po_value = po_value;\nitems[0].json.productvalueWithTax = productvalueWithTax;\nitems[0].json.po_details = po_details\nreturn items;"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        720,
        300
      ]
    },
    {
      "parameters": {
        "resource": "worksheet",
        "operation": "getContent",
        "workbook": "A6E890F58473778D!6138",
        "worksheet": "{E16AA19B-16BC-4E61-BA86-35C77BAB15EA}",
        "range": "A2:V3",
        "rawData": true,
        "filters": {}
      },
      "name": "Get po details",
      "type": "n8n-nodes-base.microsoftExcel",
      "typeVersion": 1,
      "position": [
        460,
        300
      ],
      "credentials": {
        "microsoftExcelOAuth2Api": {
          "id": "34",
          "name": "Microsoft excel creds"
        }
      }
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [],
  "updatedAt": "2022-08-12T20:15:21.181Z"
}