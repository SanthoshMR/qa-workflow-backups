{
  "active": false,
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Function",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-06-30T12:33:20.349Z",
  "id": "147",
  "name": "Vedanta PO Extract",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "const pdf = require('pdf-parse');\nlet product_name = [];\nlet product_code=[];\nlet product_quantity=[];\nlet material_description=[];\nlet vendor_name=[];\nlet vendor_phone=[];\nlet vendor_companyName=[];\nlet vendor_email=[];\nlet vendor_adress=[];\nlet po_deliverDate=[];\nlet productvalueWithTax=[];\nlet hsn_code = [];\nlet uom = [];\nlet po_number = \"\";\nlet po_date = \"\";\nlet po_value = 0;\nlet findParameters = [\"PO Number\",\"PO Date\"];\n\nfunction render_page(pageData) {\n  //check documents https://mozilla.github.io/pdf.js/\n  let render_options = {\n    //replaces all occurrences of whitespace with standard spaces (0x20). The default value is `false`.\n    normalizeWhitespace: false,\n    //do not attempt to combine same line TextItem's. The default value is `false`.\n    disableCombineTextItems: false,\n  };\n\n  return pageData.getTextContent(render_options).then(function (textContent) {\n    let lastY,\n      text = \"\";\n    for (let item of textContent.items) {\n      text += `\\n${item.str}`;\n    }\n    return text;\n  });\n}\n\nlet options = {\n  pagerender: render_page,\n  max: 200,\n};\n\nconst binaryData = Buffer.from(items[0].binary.data.data, \"base64\");\nlet content = await pdf(binaryData, options);\nconst contentSubString =  content.text.substring(0,content.text.indexOf(\"Special Instructions:\"));\nlet contentSubStringArray = contentSubString.split(\"\\n\");\n\nfor(i=0;i<contentSubStringArray.length;i++){\n    if(contentSubStringArray[i].includes(\"PO Number\")){\n      let splitPoString = contentSubStringArray[i+1].split(\":\");\n      po_number = splitPoString[1].trim();\n    }else if(contentSubStringArray[i].includes(\"PO Date\")){\n      let splitPoDateString = contentSubStringArray[i+1].split(\":\");\n      po_date = splitPoDateString[1].trim().split(\".\").reverse().join(\"-\");\n    }else if(contentSubStringArray[i].includes(\"Total PO Value\")){\n      po_value = contentSubStringArray[i+1].trim();\n    }\n    \n}\n\nitems[0].json.po_date = po_date; \nitems[0].json.po_number = po_number;\nitems[0].json.po_value = po_value;\nitems[0].json.contentSubStringArray = contentSubStringArray;\nitems[0].json.contentSubString = contentSubString;\n\nreturn items;"
      },
      "name": "Function",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        820,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://sdqa.mozart.shakedeal.com/assets/17a59799-5631-462b-892d-d7a7247a4ec6",
        "allowUnauthorizedCerts": true,
        "responseFormat": "file",
        "options": {}
      },
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        440,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "31",
          "name": "header auth creds"
        }
      }
    }
  ],
  "settings": {
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [],
  "updatedAt": "2022-07-01T09:22:29.224Z"
}