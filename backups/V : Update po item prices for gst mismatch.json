{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Get url and token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get url and token": {
      "main": [
        [
          {
            "node": "Get the shipment details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the shipment details": {
      "main": [
        [
          {
            "node": "Get the mismatched vendor po items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the mismatched vendor po items": {
      "main": [
        [
          {
            "node": "Function to update po items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to update po items": {
      "main": [
        [
          {
            "node": "Check for po items update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for po items update": {
      "main": [
        [
          {
            "node": "Update po items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get vendor po items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update po items": {
      "main": [
        [
          {
            "node": "Get vendor po items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get vendor po items": {
      "main": [
        [
          {
            "node": "Function to vendor po",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to vendor po": {
      "main": [
        [
          {
            "node": "Update vendor po",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update vendor po": {
      "main": [
        [
          {
            "node": "Get the vendor pos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get the vendor pos": {
      "main": [
        [
          {
            "node": "Function to po",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function to po": {
      "main": [
        [
          {
            "node": "Update po",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update po": {
      "main": [
        [
          {
            "node": "Call flow to update po in vpanel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-02-05T05:54:00.136Z",
  "id": "416",
  "name": "V : Update po item prices for gst mismatch",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "gst-mismatch",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        480,
        300
      ],
      "webhookId": "3b7d7045-9298-48c8-a66d-eda3c5b33b7b"
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "requestMethod": "POST",
        "url": "=https://qan8n.shakedeal.com/webhook/get-url",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "client",
              "value": "=vedanta"
            },
            {
              "name": "env",
              "value": "=qa"
            }
          ]
        }
      },
      "name": "Get url and token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        660,
        300
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_shipments/{{$node[\"Webhook\"].json[\"body\"][\"shipment\"]}}?fields=*,vendor_po_num.*",
        "options": {}
      },
      "name": "Get the shipment details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        860,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_po_items?filter={\"_and\":[{\"vendor_po\":{\"_eq\":\"{{$node[\"Get the shipment details\"].json[\"data\"][\"vendor_po_num\"].id}}\"}},{\"gst_mis_match\":{\"_eq\":true}}]}&limit=-1",
        "options": {}
      },
      "name": "Get the mismatched vendor po items",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1060,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let gstMisMatchItems = $node[\"Get the mismatched vendor po items\"].json.data;\nlet updatePoItems = [];\nlet updatePoItemsQuery = \"\";\n\ngstMisMatchItems.forEach(function(misMatchItem,index){\n  updatePoItems.push({\n    id:misMatchItem.id,\n    gross_price:parseFloat(misMatchItem.net_price)+(parseFloat(misMatchItem.net_price)*parseFloat(misMatchItem.tax_percentage))/100\n  })\n});\nupdatePoItems.forEach(function(pItem,index){\n  updatePoItemsQuery=updatePoItemsQuery+`update sdm_po_items set gross_price=${pItem.gross_price} where id='${pItem.id}';`\n})\n\n\nitems[0].json.updatePoItems=updatePoItems;\nitems[0].json.updatePoItemsQuery=updatePoItemsQuery;\nreturn items;"
      },
      "name": "Function to update po items",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1260,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": true,
              "value2": "={{$node[\"Function to update po items\"].json[\"updatePoItems\"].length?true:false}}"
            }
          ]
        }
      },
      "name": "Check for po items update",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1460,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "={{$node[\"Function to update po items\"].json[\"updatePoItemsQuery\"]}}",
        "additionalFields": {}
      },
      "name": "Update po items",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1640,
        160
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "78",
          "name": "Vedanta postgres qa"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_po_items?filter={\"_and\":[{\"vendor_po\":{\"_eq\":\"{{$node[\"Get the shipment details\"].json[\"data\"][\"vendor_po_num\"][\"id\"]}}\"}}]}&limit=-1",
        "options": {}
      },
      "name": "Get vendor po items",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1820,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let vendorPoItems = $node[\"Get vendor po items\"].json.data;\n\nlet poValue = vendorPoItems.reduce((total,obj)=>parseFloat(obj.gross_price)+total,0);\n\n\nitems[0].json.po_value =$node[\"Get the shipment details\"].json.data.vendor_po_num.po_type ==\"routing\"?poValue/1.02 :poValue\nreturn items;"
      },
      "name": "Function to vendor po",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2080,
        320
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_pos/{{$node[\"Get the shipment details\"].json[\"data\"][\"vendor_po_num\"][\"id\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "po_value",
              "value": "={{$node[\"Function to vendor po\"].json[\"po_value\"]}}"
            }
          ]
        }
      },
      "name": "Update vendor po",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2320,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_vendor_pos?filter={\"po_num\":{\"_eq\":\"{{$node[\"Get the mismatched vendor po items\"].json[\"data\"][0][\"po\"]}}\"}}",
        "options": {}
      },
      "name": "Get the vendor pos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2500,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "let allVendorPos = $node[\"Get the vendor pos\"].json.data;\nlet poValue = allVendorPos.reduce((total,obj)=>parseFloat(obj.po_value)+total,0);\n\n\nitems[0].json.po_value =$node[\"Get the shipment details\"].json.data.vendor_po_num.po_type ==\"routing\"?poValue/1.02 :poValue\nreturn items;"
      },
      "name": "Function to po",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2700,
        320
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "={{$node[\"Get url and token\"].json[\"0\"][\"mozart_url\"]}}/items/sdm_pos/{{$node[\"Get the mismatched vendor po items\"].json[\"data\"][0][\"po\"]}}",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "po_value",
              "value": "={{$node[\"Function to po\"].json[\"po_value\"]}}"
            }
          ]
        }
      },
      "name": "Update po",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        2860,
        320
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "50",
          "name": "Mozart DMS Token"
        }
      }
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "requestMethod": "POST",
        "url": "=https://qan8n.shakedeal.com/webhook/update-vendor-po",
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "pos",
              "value": "={{$node[\"Get the shipment details\"].json[\"data\"][\"vendor_po_num\"][\"id\"]}}"
            }
          ]
        }
      },
      "name": "Call flow to update po in vpanel",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        3040,
        320
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "2",
          "name": "SD Basic Auth"
        }
      }
    }
  ],
  "settings": {},
  "staticData": null,
  "tags": [],
  "updatedAt": "2024-02-05T10:26:21.685Z"
}